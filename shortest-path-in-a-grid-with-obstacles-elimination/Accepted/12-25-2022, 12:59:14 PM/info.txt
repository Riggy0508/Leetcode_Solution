{"id":865433102,"lang":"python3","lang_name":"Python3","time":"2Â months","timestamp":1672001954,"status":10,"status_display":"Accepted","runtime":"697 ms","url":"/submissions/detail/865433102/","is_pending":"Not Pending","title":"Shortest Path in a Grid with Obstacles Elimination","memory":"22.4 MB","code":"class Solution:\n    def shortestPath(self, grid: List[List[int]], k: int) -> int:\n\n        rows=len(grid)\n        cols=len(grid[0])\n        direction=[(1,0),(-1,0),(0,-1),(0,1)]\n\n        q=collections.deque()\n        steps=0\n        q.append([0,0,k,steps])\n        seen=set()\n        seen.add((0,0,k))\n        target=(rows-1,cols-1)\n\n        while q:\n            c_r,c_c,c_k,steps=q.popleft()\n            if c_r==target[0] and c_c==target[1]:\n                return steps\n\n            for d in direction:\n                new_r=c_r+d[0]\n                new_c=c_c+d[1]\n\n                if new_r>=0 and new_r<rows and new_c>=0 and new_c<cols:\n                    k=c_k-grid[new_r][new_c]\n                    if k>=0 and (new_r,new_c,k) not in seen:\n                        q.append([new_r,new_c,k,steps+1])\n                        seen.add((new_r,new_c,k))\n        return -1\n\n\n\n","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-in-a-grid-with-obstacles-elimination","has_notes":false}