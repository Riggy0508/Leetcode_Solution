{"id":842465285,"lang":"python3","lang_name":"Python3","time":"3 months, 1 week","timestamp":1668319449,"status":10,"status_display":"Accepted","runtime":"5205 ms","url":"/submissions/detail/842465285/","is_pending":"Not Pending","title":"Word Search","memory":"13.9 MB","code":"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        rows=len(board)\n        cols=len(board[0])\n        \n        path=set()\n        def backtrack(r,c,i):\n            if i==len(word):\n                return True\n            \n            if r<0 or r>=rows or c<0 or c>=cols or board[r][c]!=word[i] or (r,c) in path:\n                return False\n            \n            path.add((r,c))\n            \n            res=(backtrack(r-1,c,i+1) or \n                backtrack(r+1,c,i+1) or \n                backtrack(r,c-1,i+1) or \n                backtrack(r,c+1,i+1))\n            \n            path.remove((r,c))\n            \n            return res\n        \n        for r in range(rows):\n            for c in range(cols):\n                if backtrack(r,c,0):\n                    return True\n        \n        return False\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search","has_notes":false}