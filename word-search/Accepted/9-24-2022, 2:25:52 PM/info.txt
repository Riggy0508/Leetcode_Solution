{"id":807789644,"lang":"python3","time":"20 hours, 57 minutes","timestamp":1664054752,"status_display":"Accepted","runtime":"8966 ms","url":"/submissions/detail/807789644/","is_pending":"Not Pending","title":"Word Search","memory":"13.9 MB","code":"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        rows,cols=len(board),len(board[0])\n        \n        path=set()\n        def dfs(r,c,i):\n            if i==len(word):\n                return True\n            \n            if (r<0 or c<0 or r>=rows or c>=cols or word[i]!=board[r][c] or (r,c) in path):\n                return False\n            path.add((r,c))\n            res=(dfs(r+1,c,i+1)\n                or dfs(r-1,c,i+1)\n                or dfs(r,c+1,i+1)\n                or dfs(r,c-1,i+1))\n            path.remove((r,c))\n            return res\n        \n        for r in range(rows):\n            for c in range(cols):\n                if dfs(r,c,0):return True\n        return False","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search"}