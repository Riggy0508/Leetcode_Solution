{"id":841493049,"question_id":79,"lang":"python3","lang_name":"Python3","time":"2 years, 3 months","timestamp":1668188094,"status":10,"status_display":"Accepted","runtime":"5202 ms","url":"/submissions/detail/841493049/","is_pending":"Not Pending","title":"Word Search","memory":"13.9 MB","code":"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        rows=len(board)\n        cols=len(board[0])\n        \n        path=set()\n        \n        def backtrack(row,col,i):\n            if i==len(word):\n                return True\n            \n            if row<0 or row>=rows or col<0 or col>=cols or board[row][col]!=word[i] or (row,col) in path:\n                return False\n            \n            path.add((row,col)) \n            \n            res=(backtrack(row-1,col,i+1) or\n                          backtrack(row+1,col,i+1) or\n                                   backtrack(row,col-1,i+1) or\n                                            backtrack(row,col+1,i+1))\n                                             \n            path.remove((row,col))\n            return res\n        \n        \n        \n        for row in range(rows):\n            for col in range(cols):\n                if backtrack(row,col,0):\n                    return True\n                \n        return False\n                ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search","has_notes":false,"flag_type":1}