{"id":1538599367,"question_id":146,"lang":"python3","lang_name":"Python3","time":"3 weeks, 6 days","timestamp":1739224948,"status":10,"status_display":"Accepted","runtime":"129 ms","url":"/submissions/detail/1538599367/","is_pending":"Not Pending","title":"LRU Cache","memory":"79.3 MB","code":"class LRUCache:\n\n    def __init__(self, capacity: int):\n        self.capacity=capacity\n        self.hash1=collections.OrderedDict()\n\n    def get(self, key: int) -> int:\n        if key in self.hash1:\n            value=self.hash1[key]\n            self.hash1.move_to_end(key)\n            return value\n        else:\n            return -1\n\n    def put(self, key: int, value: int) -> None:\n        self.hash1[key]=value\n        self.hash1.move_to_end(key)\n\n        if len(self.hash1)>self.capacity:\n            self.hash1.popitem(last=False)\n\n\n# Your LRUCache object will be instantiated and called as such:\n# obj = LRUCache(capacity)\n# param_1 = obj.get(key)\n# obj.put(key,value)","compare_result":"11111111111111111111111","title_slug":"lru-cache","has_notes":false,"flag_type":1}