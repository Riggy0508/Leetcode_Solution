{"id":890895885,"lang":"python3","lang_name":"Python3","time":"2 weeks, 6 days","timestamp":1675454315,"status":10,"status_display":"Accepted","runtime":"779 ms","url":"/submissions/detail/890895885/","is_pending":"Not Pending","title":"LRU Cache","memory":"75.2 MB","code":"class LRUCache:\n\n    def __init__(self, capacity: int):\n        self.capacity=capacity\n        self.dic=collections.OrderedDict()\n        \n\n    def get(self, key: int) -> int:\n        if key not in self.dic:\n            return -1\n        val=self.dic[key]\n        self.dic.move_to_end(key)\n        return val\n\n    def put(self, key: int, value: int) -> None:\n        self.dic[key]=value\n        self.dic.move_to_end(key)\n        if len(self.dic)>self.capacity:\n            self.dic.popitem(last=False)\n\n\n# Your LRUCache object will be instantiated and called as such:\n# obj = LRUCache(capacity)\n# param_1 = obj.get(key)\n# obj.put(key,value)","compare_result":"1111111111111111111111","title_slug":"lru-cache","has_notes":false}