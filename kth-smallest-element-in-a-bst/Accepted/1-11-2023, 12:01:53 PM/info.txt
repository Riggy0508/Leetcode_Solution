{"id":876351313,"lang":"python3","lang_name":"Python3","time":"1 month, 1 week","timestamp":1673467313,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/876351313/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"18 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:\n        n=0\n        cur=root\n\n        stack=[]\n\n        while True:\n            while cur:\n                stack.append(cur)\n                cur=cur.left\n\n            cur=stack.pop()\n            n+=1\n            if n==k:\n                return cur.val\n            cur=cur.right   \n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst","has_notes":false}