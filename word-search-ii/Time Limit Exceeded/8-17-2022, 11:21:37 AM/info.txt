{"id":776277466,"lang":"python3","time":"1 month, 1 week","timestamp":1660760497,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/776277466/","is_pending":"Not Pending","title":"Word Search II","memory":"N/A","code":"class TrieNode:\n    def __init__(self):\n        self.children={}\n        self.isWord=False\n        \n    def addWord(self,word):\n        cur=self\n        for c in word:\n            if c not in cur.children:\n                cur.children[c]=TrieNode()\n            cur=cur.children[c]\n        cur.isWord=True\n\nclass Solution:\n    def findWords(self, board: List[List[str]], words: List[str]) -> List[str]:\n        root=TrieNode()\n        for w in words:\n            root.addWord(w)\n            \n        rows,cols=len(board),len(board[0])\n        res,visit=set(),set()\n        \n        def dfs(r,c,node,word):\n            if (r<0 or c<0 or\n               r==rows or c==cols or\n               (r,c) in visit or board[r][c] not in node.children):\n                return \n            visit.add((r,c))\n            node=node.children[board[r][c]]\n            word+=board[r][c]\n            if node.isWord:\n                res.add(word)\n            \n            dfs(r-1,c,node,word)\n            dfs(r+1,c,node,word)\n            dfs(r,c-1,node,word)\n            dfs(r,c+1,node,word)\n\n            visit.remove((r,c))\n            \n        for r in range(rows):\n            for c in range(cols):\n                dfs(r,c,root,\"\")\n                \n        return list(res)","compare_result":"111111111111111111111111111111111111110000000000000000000000000","title_slug":"word-search-ii"}