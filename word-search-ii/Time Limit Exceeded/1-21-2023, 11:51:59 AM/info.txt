{"id":882642683,"question_id":212,"lang":"python3","lang_name":"Python3","time":"2Â years","timestamp":1674330719,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/882642683/","is_pending":"Not Pending","title":"Word Search II","memory":"N/A","code":"class TrieNode:\n    def __init__(self):\n        self.children={}\n        self.end=False\n    \n    def addWord(self,word):\n        cur=self\n\n        for w in word:\n            if w not in cur.children:\n                cur.children[w]=TrieNode()\n            cur=cur.children[w]\n        cur.end=True\n\nclass Solution:\n    def findWords(self, board: List[List[str]], words: List[str]) -> List[str]:\n        root=TrieNode()\n        for w in words:\n            root.addWord(w)\n        \n\n        rows,cols=len(board),len(board[0])\n        res,visit=set(),set()\n\n        def dfs(r,c,node,word):\n            if r < 0 or c< 0 or r>=rows or c >=cols or board[r][c] not in node.children or (r,c) in visit:\n                return\n\n\n            visit.add((r,c))\n            node=node.children[board[r][c]]\n            word+=board[r][c]\n            if node.end:\n                res.add(word)\n\n            dfs(r-1,c,node,word)\n            dfs(r,c-1,node,word)\n            dfs(r+1,c,node,word)\n            dfs(r,c+1,node,word)\n\n            visit.remove((r,c))\n\n        for r in range(rows):\n            for c in range(cols):\n                dfs(r,c,root,\"\")\n\n        return list(res)\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search-ii","has_notes":false,"flag_type":1}