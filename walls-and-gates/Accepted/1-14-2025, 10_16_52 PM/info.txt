{"id":1509091013,"question_id":286,"lang":"python3","lang_name":"Python3","time":"1 month, 3 weeks","timestamp":1736921812,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1509091013/","is_pending":"Not Pending","title":"Walls and Gates","memory":"21.3 MB","code":"class Solution:\n    def wallsAndGates(self, rooms: List[List[int]]) -> None:\n        \"\"\"\n        Do not return anything, modify rooms in-place instead.\n        \"\"\"\n        if not rooms or not rooms[0]:\n            return\n        \n        rows,cols=len(rooms),len(rooms[0])\n        q=deque()\n\n        for r in range(rows):\n            for c in range(cols):\n                if rooms[r][c]==0:\n                    q.append((r,c))\n\n        direction=[(-1,0),(1,0),(0,-1),(0,1)]\n\n\n        while q:\n            r,c=q.popleft()\n\n            for dr,dc in direction:\n                nr,nc=dr+r,dc+c\n                if 0<=nr<rows and 0<=nc<cols and rooms[nr][nc]==2147483647:\n                    rooms[nr][nc]=rooms[r][c]+1\n                    q.append((nr,nc))","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"walls-and-gates","has_notes":false,"flag_type":1}