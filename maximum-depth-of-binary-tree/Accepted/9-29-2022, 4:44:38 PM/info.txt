{"id":811707715,"question_id":104,"lang":"python3","lang_name":"Python3","time":"2 years, 4 months","timestamp":1664495078,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/811707715/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxDepth(self, root: Optional[TreeNode]) -> int:\n        #We know that the maximum depth of a root node is 0\n        if root is None:\n            return 0\n        \n        return max(self.maxDepth(root.left),self.maxDepth(root.right))+1\n    \n    \n    \n    #In order to better understand this, let's solve an example.\n    #For simplicity I will be use md for maxDepth\n    #md(3)=max(md(9),md(20))+1\n    #md(9)=max(md(leftnode which is none),md(rightNode which is none))+1, Therefore md(9)=max(md(0),md(0))+1\n    #md(9)=1\n    #md(20)=max(md(15),md(7))+1\n    #md(15)=1   Just like 9\n    #md(7)=1    Just like 9\n    #md(20)=max(md(15),md(7))+1\n        #= max(1,1)+1=2\n    #now for md(3)=max(1,2)+1\n        #=2+1\n        #=3\n    \n    \n    \n    \n        \n        ","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}