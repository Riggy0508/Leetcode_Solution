{"id":1539599676,"question_id":104,"lang":"python3","lang_name":"Python3","time":"3 weeks, 5 days","timestamp":1739296787,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1539599676/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"19.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxDepth(self, root: Optional[TreeNode]) -> int:\n        \n        if not root:\n            return 0\n\n        q=deque([root])\n        length=0\n\n        while q:\n            for _ in range(len(q)):\n                node=q.popleft()\n\n                if node.right:\n                    q.append(node.right)\n                if node.left:\n                    q.append(node.left)\n\n            length+=1\n\n        return length\n            ","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}