{"id":810804066,"lang":"python3","lang_name":"Python3","time":"1 month, 1 week","timestamp":1664391005,"status":10,"status_display":"Accepted","runtime":"71 ms","url":"/submissions/detail/810804066/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"16.5 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        #checking if the linked list is emplty or not\n        if not head:return None\n        #creating our odd and even pointer\n        odd=head\n        even=head.next\n        #keeping a note of even head because at the end we will need to point the end of the odd list to the even list. \n        evenhead=even\n        while even and even.next:\n            odd.next=even.next\n            odd=odd.next\n            even.next=odd.next\n            even=even.next\n        #once the while loop is completed it indicates that we have our odd list and even list so now we will point the end of odd list to the start of evenlist.\n        odd.next=evenhead\n        return head","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list","has_notes":false,"notes":"","topic_tags":[]}