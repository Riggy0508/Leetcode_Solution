{"id":859919361,"lang":"python3","lang_name":"Python3","time":"2 months, 1 week","timestamp":1671062974,"status":10,"status_display":"Accepted","runtime":"961 ms","url":"/submissions/detail/859919361/","is_pending":"Not Pending","title":"Maximal Square","memory":"60.8 MB","code":"class Solution:\n    def maximalSquare(self, matrix: List[List[str]]) -> int:\n        rows,cols=len(matrix),len(matrix[0])\n        cache={}\n\n        def helper(r,c):\n            if r>=rows or c>=cols:\n                return 0\n\n            if (r,c) not in cache:\n\n                right=helper(r,c+1)\n                diag=helper(r+1,c+1)\n                down=helper(r+1,c)\n\n                cache[(r,c)]=0\n                if matrix[r][c]==\"1\":\n                    cache[(r,c)]=1+min(right,diag,down)\n\n            return cache[(r,c)]\n        helper(0,0)\n        return max(cache.values())**2","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square","has_notes":false}