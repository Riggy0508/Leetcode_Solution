{"id":788014314,"lang":"python3","time":"3 weeks, 4 days","timestamp":1661953495,"status_display":"Accepted","runtime":"4478 ms","url":"/submissions/detail/788014314/","is_pending":"Not Pending","title":"Minimum Speed to Arrive on Time","memory":"28.1 MB","code":"class Solution:\n    def minSpeedOnTime(self, dist: List[int], hour: float) -> int:\n        \n        upper=max(max(dist),ceil(dist[-1]/0.01))\n        total = lambda speed: sum(map(lambda x: ceil(x / speed), dist[:-1])) + (dist[-1] / speed)\n        \n        if total(upper)>hour:\n            return -1\n        left,right=1,upper\n        while left<right:\n            mid =left+(right-left)//2\n            if total(mid)>hour:\n                left=mid+1\n            else:\n                right=mid\n        return right","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-speed-to-arrive-on-time"}