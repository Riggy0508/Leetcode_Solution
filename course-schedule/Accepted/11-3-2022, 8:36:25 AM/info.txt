{"id":836138279,"lang":"python3","lang_name":"Python3","time":"3 months, 3 weeks","timestamp":1667489785,"status":10,"status_display":"Accepted","runtime":"155 ms","url":"/submissions/detail/836138279/","is_pending":"Not Pending","title":"Course Schedule","memory":"17.1 MB","code":"class Solution:\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:\n        preMap={i:[] for i in range(numCourses)}\n        #print(preMap)     {0: [], 1: []}\n        for crs,pre in (prerequisites):\n            preMap[crs].append(pre)\n        #print(preMap)   {0: [], 1: [0]}\n\n        \n        #Creating a visit set in order to keep track of all the visited courses in order to avoid processing of it again and again\n        visitSet=set()\n        def dfs (crs):\n            if crs in visitSet:\n                return False\n            if preMap[crs]==[]:\n                return True\n            \n            visitSet.add(crs)\n            for pre in preMap[crs]:\n                if not dfs(pre):\n                    return False\n            visitSet.remove(crs)\n            preMap[crs]=[]\n            return True\n            \n        for crs in range(numCourses):\n            if not dfs(crs):\n                return False\n        \n        return True\n","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"course-schedule","has_notes":false}