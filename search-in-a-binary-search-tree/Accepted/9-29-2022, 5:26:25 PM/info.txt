{"id":811722762,"question_id":783,"lang":"python3","lang_name":"Python3","time":"2 years, 4 months","timestamp":1664497585,"status":10,"status_display":"Accepted","runtime":"195 ms","url":"/submissions/detail/811722762/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"16.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def searchBST(self, root: Optional[TreeNode], val: int) -> Optional[TreeNode]:\n        if root is None:\n            return \n        \n        if root.val==val:\n            return root\n        \n        if root.val>val:\n            return self.searchBST(root.left,val)\n        else:\n            return self.searchBST(root.right,val)","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}