{"id":851298019,"lang":"python3","lang_name":"Python3","time":"2 months, 3 weeks","timestamp":1669656592,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/851298019/","is_pending":"Not Pending","title":"Design Twitter","memory":"14.1 MB","code":"class Twitter:\n\n    def __init__(self):\n        self.count=0\n        self.followMap=defaultdict(set)\n        self.tweetMap=defaultdict(list)\n\n    def postTweet(self, userId: int, tweetId: int) -> None:\n        self.tweetMap[userId].append([self.count,tweetId])\n        self.count-=1\n\n    def getNewsFeed(self, userId: int) -> List[int]:\n        res=[]\n        minHeap=[]\n        \n        self.followMap[userId].add(userId)\n        for followeeId in self.followMap[userId]:\n            if followeeId in self.tweetMap:\n                index=len(self.tweetMap[followeeId])-1\n                count,tweetId=self.tweetMap[followeeId][index]\n                minHeap.append([count,tweetId,followeeId,index-1])\n        heapq.heapify(minHeap)\n        while minHeap and len(res)<10:\n            count, tweetId,followeeId,index=heapq.heappop(minHeap)\n            res.append(tweetId)\n            if index>=0:\n                count,tweetId=self.tweetMap[followeeId][index]\n                heapq.heappush(minHeap,[count,tweetId,followeeId,index-1])\n        return res\n\n    def follow(self, followerId: int, followeeId: int) -> None:\n        self.followMap[followerId].add(followeeId)\n\n    def unfollow(self, followerId: int, followeeId: int) -> None:\n        if followeeId in self.followMap[followerId]:\n            self.followMap[followerId].remove(followeeId)\n\n\n# Your Twitter object will be instantiated and called as such:\n# obj = Twitter()\n# obj.postTweet(userId,tweetId)\n# param_2 = obj.getNewsFeed(userId)\n# obj.follow(followerId,followeeId)\n# obj.unfollow(followerId,followeeId)","compare_result":"1111111111111111","title_slug":"design-twitter","has_notes":false}