{"id":830328702,"question_id":105,"lang":"python3","lang_name":"Python3","time":"2 years, 3 months","timestamp":1666746836,"status":10,"status_display":"Accepted","runtime":"330 ms","url":"/submissions/detail/830328702/","is_pending":"Not Pending","title":"Construct Binary Tree from Preorder and Inorder Traversal","memory":"88.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -> Optional[TreeNode]:\n        if not preorder or not inorder:\n            return None\n        \n        root=TreeNode(preorder[0])\n        mid=inorder.index(preorder[0])\n        root.left=self.buildTree(preorder[1:mid+1],inorder[:mid])\n        root.right=self.buildTree(preorder[mid+1:],inorder[mid+1:])\n        return root\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-preorder-and-inorder-traversal","has_notes":false,"flag_type":1}