{"id":753088941,"lang":"python3","time":"2Â months","timestamp":1658425564,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/753088941/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"13.9 MB","code":"class Solution:\n    def orangesRotting(self, grid: List[List[int]]) -> int:\n        q=deque()\n        time,fresh=0,0\n        \n        rows, cols=len(grid),len(grid[0])\n        \n        for r in range(rows):\n            for c in range(cols):\n                if grid[r][c]==1:\n                    fresh+=1\n                if grid[r][c]==2:\n                    q.append([r,c])\n                    \n        directions=[[0,1],[1,0],[0,-1],[-1,0]]\n        while q and fresh>0:\n            for i in range (len(q)):\n                r,c=q.popleft()\n                for dr,dc in directions:\n                    row,col=dr+r,dc+c\n                    \n                    if (row<0 or row==len(grid) or\n                       col<0 or col==len(grid[0])or\n                       grid[row][col]!=1):\n                        continue\n                    grid[row][col]=2\n                    q.append([row,col])\n                    fresh-=1\n            time+=1\n        return time if fresh==0 else -1\n                ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges"}