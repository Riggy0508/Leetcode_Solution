{"id":976675646,"question_id":1036,"lang":"python3","lang_name":"Python3","time":"1 year, 8 months","timestamp":1687384632,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/976675646/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"16.4 MB","code":"class Solution:\n    def orangesRotting(self, grid: List[List[int]]) -> int:\n        fresh=0\n        rows,cols=len(grid),len(grid[0])\n        q=collections.deque()\n        time=0\n\n        for r in range(rows):\n            for c in range(cols):\n                if grid[r][c]==1:\n                    fresh+=1\n                if grid[r][c]==2:\n                    q.append([r,c])\n\n        directions=[[0,1],[0,-1],[1,0],[-1,0]]\n\n        while fresh>0 and q:\n            for i in range(len(q)):\n                r,c=q.popleft()\n                for dr,dc in directions:\n                    row,col=dr+r,dc+c\n                    if (row in range(len(grid)) and col in range(len(grid[0])) and grid[row][col] == 1):\n                        fresh-=1\n                        grid[row][col]=2\n                        q.append([row, col])\n\n            time+=1\n        return time if fresh==0 else -1 \n        \n\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges","has_notes":false,"flag_type":1}