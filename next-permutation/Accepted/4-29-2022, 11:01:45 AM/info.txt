{"id":689803037,"lang":"python3","time":"4 months, 4 weeks","timestamp":1651255305,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/689803037/","is_pending":"Not Pending","title":"Next Permutation","memory":"13.8 MB","code":"class Solution:\n    def nextPermutation(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        N=len(nums)\n        pivot=0\n        #find pivot\n        for i in range(N-1,0,-1):\n            if nums[i-1]<nums[i]:\n                pivot=i\n                break\n        if pivot==0:\n            nums.sort()\n            return\n        \n        #then find the swap where first>pivot\n        swap=N-1\n        while nums[pivot-1]>=nums[swap]:\n            swap-=1\n        #swap    \n        nums[swap],nums[pivot-1]=nums[pivot-1],nums[swap]\n        \n        nums[pivot:]=sorted(nums[pivot:])\n                ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-permutation"}