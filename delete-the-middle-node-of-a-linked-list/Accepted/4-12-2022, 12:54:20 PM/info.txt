{"id":679187118,"lang":"python3","time":"5 months, 2 weeks","timestamp":1649793260,"status_display":"Accepted","runtime":"2098 ms","url":"/submissions/detail/679187118/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"60.7 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        dummy=ListNode(next=head)\n        slow,fast=head,head\n        \n        if not head.next:\n            return None\n        \n        while fast and fast.next:\n            fast=fast.next.next\n            slow=slow.next\n            \n        node=head\n        \n        while node:\n                if node.next==slow:\n                    node.next=node.next.next\n                else:\n                    node=node.next\n            \n        return dummy.next\n        \n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list"}