{"id":696950833,"lang":"python3","time":"4Â months, 2Â weeks","timestamp":1652207462,"status_display":"Accepted","runtime":"733 ms","url":"/submissions/detail/696950833/","is_pending":"Not Pending","title":"132 Pattern","memory":"32.1 MB","code":"class Solution:\n    def find132pattern(self, nums: List[int]) -> bool:\n        stack=[] # this is a mono stack with a pair which stores number and the minimum count\n        curMin=nums[0]\n        \n        for n in (nums[1:]):\n            while stack and n>=stack[-1][0]:\n                stack.pop()\n            if stack and n>stack[-1][1]:\n                return True\n            stack.append([n,curMin])\n            curMin = min(n,curMin)\n            \n        return False","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"132-pattern"}