{"id":1531432940,"question_id":257,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1738695186,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1531432940/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"18 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:\n        paths=[]\n\n        def dfs(node,cur_path):\n            if not node:\n                return \n\n            if cur_path:\n                cur_path+=\"->\"+str(node.val)\n            else:\n                cur_path=str(node.val)\n\n            if not node.left and not node.right:\n                paths.append(cur_path)\n            else:\n                dfs(node.left,cur_path)\n                dfs(node.right,cur_path)\n\n        dfs(root,\"\")\n        return paths","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false,"flag_type":1}