{"id":844033554,"lang":"python3","lang_name":"Python3","time":"3 months, 1 week","timestamp":1668533003,"status":10,"status_display":"Accepted","runtime":"297 ms","url":"/submissions/detail/844033554/","is_pending":"Not Pending","title":"Replace Words","memory":"35.9 MB","code":"class TrieNode(object):\n        def __init__(self):\n            self.children = {}\n            self.isWord = False\nclass Trie:\n    def __init__(self):\n        self.root = TrieNode()\n    def insert(self, word):\n        node = self.root\n        for char in word:\n            if char not in node.children:\n                node.children[char] = TrieNode()\n            node = node.children[char]\n        node.isWord = True\n        \n    def transfer(self,word):\n        cur=self.root\n        string=\"\"\n        for char in word:\n            if cur.isWord:\n                return string\n            if char not in cur.children:\n                return word\n            string+=char\n            cur=cur.children[char]\n        return word\n            \n\nclass Solution:\n    def replaceWords(self, dictionary: List[str], sentence: str) -> str:\n        output=[]\n        words=sentence.split(\" \")\n        trie=Trie()\n        \n        for word in dictionary:\n            trie.insert(word)\n            \n        for word in words:\n            output.append(trie.transfer(word))\n        return \" \".join(output)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"replace-words","has_notes":false}