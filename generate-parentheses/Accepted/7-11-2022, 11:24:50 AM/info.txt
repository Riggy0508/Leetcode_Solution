{"id":744500628,"lang":"python3","time":"2 months, 2 weeks","timestamp":1657563890,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/744500628/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"14.2 MB","code":"class Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        \n        stack=[]\n        res=[]\n        \n        def backtrack(openP,closeP):\n            \n            if openP==closeP==n:\n                res.append(\"\".join(stack))\n                return\n            if openP<n:\n                stack.append(\"(\")\n                backtrack(openP+1,closeP)\n                stack.pop()\n                \n            if closeP<openP:\n                stack.append(\")\")\n                backtrack(openP,closeP+1)\n                stack.pop()\n                \n        \n        backtrack(0,0)\n        return res\n                ","compare_result":"11111111","title_slug":"generate-parentheses"}