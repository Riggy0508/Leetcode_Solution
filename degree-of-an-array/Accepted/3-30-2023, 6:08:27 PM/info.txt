{"id":925118300,"question_id":697,"lang":"python3","lang_name":"Python3","time":"1 year, 10 months","timestamp":1680224907,"status":10,"status_display":"Accepted","runtime":"217 ms","url":"/submissions/detail/925118300/","is_pending":"Not Pending","title":"Degree of an Array","memory":"15.4 MB","code":"class Solution:\n    def findShortestSubArray(self, nums: List[int]) -> int:\n        left,right,count={},{},{}\n        for i,x in enumerate(nums):\n            if x not in left:\n                left[x]=i\n            right[x]=i\n            count[x]=count.get(x,0)+1\n            \n        ans=len(nums)\n        degree=max(count.values())\n\n        for x in count:\n            if count[x]==degree:\n                ans=min(ans,right[x]-left[x]+1)\n        return ans\n\n            ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"degree-of-an-array","has_notes":false,"flag_type":1}