{"id":781495729,"lang":"python3","time":"1Â month","timestamp":1661281155,"status_display":"Accepted","runtime":"1303 ms","url":"/submissions/detail/781495729/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"14.1 MB","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        res=\"\"\n        resLen=0\n        \n        for i in range(len(s)):\n            \n            #for odd length\n            l,r=i,i\n            while l>=0 and r<len(s) and s[l]==s[r]:\n                if r-l+1>resLen:\n                    res=s[l:r+1]\n                    resLen=r-l+1\n                l-=1\n                r+=1\n                \n            #for even length\n            l,r=i,i+1\n            while l>=0 and r<len(s) and s[l]==s[r]:\n                if r-l+1>resLen:\n                    res=s[l:r+1]\n                    resLen=r-l+1\n                l-=1\n                r+=1\n        return res ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}