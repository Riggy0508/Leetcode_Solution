{"id":865105189,"question_id":102,"lang":"python3","lang_name":"Python3","time":"2 years, 1 month","timestamp":1671945912,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/865105189/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n\n        q=collections.deque()\n\n        q.append(root)\n        res=[]\n        while q:\n            qLen=len(q)\n            lis=[]\n            for i in range(qLen):\n                node=q.popleft()\n                if node:\n                    lis.append(node.val)\n                    q.append(node.left)\n                    q.append(node.right)\n            \n            if lis:\n                res.append(lis)\n        return res\n\n","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}