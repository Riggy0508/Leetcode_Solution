{"id":1565619477,"question_id":102,"lang":"python3","lang_name":"Python3","time":"2 days, 21 hours","timestamp":1741325123,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1565619477/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"18.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        \n        ans=[]\n\n        if not root:\n            return ans\n\n        def helper(node,level):\n\n            if len(ans)==level:\n                ans.append([])\n\n            ans[level].append(node.val)\n\n            if node.left:\n                helper(node.left,level+1)\n\n            if node.right:\n                helper(node.right,level+1)\n\n        helper(root,0)\n        return ans","compare_result":"11111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}