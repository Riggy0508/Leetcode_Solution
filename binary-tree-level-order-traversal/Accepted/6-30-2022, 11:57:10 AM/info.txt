{"id":735312901,"lang":"python3","time":"2 months, 3 weeks","timestamp":1656615430,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/735312901/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"15.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        \n        levels=[]\n        \n        if not root:\n            return levels\n        \n        def helper(node,level):\n            if len(levels)==level:\n                levels.append([])\n                \n            levels[level].append(node.val)\n            \n            if node.left:\n                helper(node.left,level+1)\n            if node.right:\n                helper(node.right,level+1)\n                \n        helper(root,0)\n        \n        return levels\n    \n    ","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}