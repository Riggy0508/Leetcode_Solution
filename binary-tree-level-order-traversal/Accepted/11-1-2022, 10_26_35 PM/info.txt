{"id":835161768,"question_id":102,"lang":"python3","lang_name":"Python3","time":"2 years, 4 months","timestamp":1667366795,"status":10,"status_display":"Accepted","runtime":"55 ms","url":"/submissions/detail/835161768/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        if not root:\n            return []\n        \n        q=collections.deque()\n        q.append(root)\n        \n        res=[]\n        \n        while q:\n            qLen=len(q)\n            level=[]\n            for i in range(qLen):\n                node=q.popleft()\n                if node:\n                    level.append(node.val)\n                    q.append(node.left)\n                    q.append(node.right)\n            if level:\n                res.append(level)\n        return res","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}