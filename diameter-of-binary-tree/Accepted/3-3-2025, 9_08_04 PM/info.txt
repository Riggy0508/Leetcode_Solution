{"id":1562195149,"question_id":543,"lang":"python3","lang_name":"Python3","time":"5 days, 21 hours","timestamp":1741064884,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1562195149/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        if not root:\n            return \n        def dfs(node):\n            if not node:\n                return 0\n            \n            leftDia=dfs(node.left)\n            rightDia=dfs(node.right)\n\n            self.diameter=max(self.diameter,rightDia+leftDia)\n\n            return max(leftDia,rightDia)+1\n    \n        self.diameter=0\n        dfs(root)\n        return self.diameter","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}