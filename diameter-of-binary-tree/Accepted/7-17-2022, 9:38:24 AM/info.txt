{"id":749542519,"lang":"python3","time":"2 months, 1 week","timestamp":1658075904,"status_display":"Accepted","runtime":"74 ms","url":"/submissions/detail/749542519/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"16.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        res=[0]\n        \n        def dfs(root):\n            if not root:\n                return -1\n            \n            left=dfs(root.left)\n            right=dfs(root.right)\n            \n            res[0]=max(res[0],2+left+right)\n            \n            \n            return 1+max(left,right)\n        \n        dfs(root)\n        return res[0]\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}