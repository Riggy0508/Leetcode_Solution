{"id":732063746,"lang":"python3","time":"3Â months","timestamp":1656279447,"status_display":"Accepted","runtime":"57 ms","url":"/submissions/detail/732063746/","is_pending":"Not Pending","title":"Permutations","memory":"14 MB","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        result=[]\n        \n        if (len(nums)==1):\n            return [nums.copy()]    #need to return list of lits, Hint is given in the 3rd example. \n        \n        for i in range(len(nums)):\n            n=nums.pop(0)\n            perms=self.permute(nums)\n            \n            for perm in perms:\n                perm.append(n)\n            result.extend(perms)\n            nums.append(n)\n        return result\n            ","compare_result":"11111111111111111111111111","title_slug":"permutations"}