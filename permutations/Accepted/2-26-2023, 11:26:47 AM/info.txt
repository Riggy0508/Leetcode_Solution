{"id":905507923,"question_id":46,"lang":"python3","lang_name":"Python3","time":"1Â year, 11Â months","timestamp":1677439607,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/905507923/","is_pending":"Not Pending","title":"Permutations","memory":"14.1 MB","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        res=[]\n        stack=[]\n        visited=set()\n\n        def backtrack(subset=[]):\n            if len(subset)==len(nums):\n                res.append(subset.copy())\n                return\n\n            for i in range(len(nums)):\n                if i not in visited:\n                    visited.add(i)\n                    backtrack(subset+[nums[i]])\n                    visited.remove(i)\n\n        backtrack()\n        return res","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}