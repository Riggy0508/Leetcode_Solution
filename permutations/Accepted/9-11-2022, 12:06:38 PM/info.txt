{"id":797354292,"lang":"python3","time":"1Â week, 6Â days","timestamp":1662923198,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/797354292/","is_pending":"Not Pending","title":"Permutations","memory":"14.1 MB","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        result=[]\n        n=len(nums)\n        \n        def dfs(used_number,nums):\n            if len(used_number)==n:\n                result.append(used_number.copy())\n                return \n            \n            for i,num in enumerate(nums):\n                used_number.append(num)\n                dfs(used_number,nums[:i]+nums[i+1:])\n                used_number.pop()\n                    \n        dfs([],nums)\n        return result","compare_result":"11111111111111111111111111","title_slug":"permutations"}