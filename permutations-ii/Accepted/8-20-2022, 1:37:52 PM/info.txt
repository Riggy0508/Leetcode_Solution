{"id":778875028,"lang":"python3","time":"1Â month","timestamp":1661027872,"status_display":"Accepted","runtime":"55 ms","url":"/submissions/detail/778875028/","is_pending":"Not Pending","title":"Permutations II","memory":"14.3 MB","code":"class Solution:\n    def permuteUnique(self, nums: List[int]) -> List[List[int]]:\n        res=[]\n        perm=[]\n        hash1={n:0 for n in nums}\n        \n        for n in nums:\n            hash1[n]+=1\n        \n        def dfs():\n            if len(perm)==len(nums):\n                res.append(perm.copy())\n                return\n            \n            for h in hash1:\n                if hash1[h]>0:\n                    perm.append(h)\n                    hash1[h]-=1\n                    \n                    dfs()\n                    \n                    hash1[h]+=1\n                    perm.pop()\n                    \n                \n        \n        \n        \n        dfs()\n        return res","compare_result":"111111111111111111111111111111111","title_slug":"permutations-ii"}