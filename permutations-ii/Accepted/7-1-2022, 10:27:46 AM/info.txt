{"id":736012650,"lang":"python3","time":"2Â months, 3Â weeks","timestamp":1656696466,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/736012650/","is_pending":"Not Pending","title":"Permutations II","memory":"14.4 MB","code":"class Solution:\n    def permuteUnique(self, nums: List[int]) -> List[List[int]]:\n        res=[]\n        perm=[]\n        count={n:0 for n in nums}\n        \n        for n in nums:\n            count[n]+=1\n            \n        def dfs():\n            if len(perm)==len(nums):\n                res.append(perm.copy())\n                return\n            \n            for n in count:\n                if count[n]>0:\n                    perm.append(n)\n                    count[n]-=1\n                    \n                    dfs()\n                    \n                    count[n]+=1\n                    perm.pop()\n        dfs()\n        return res","compare_result":"111111111111111111111111111111111","title_slug":"permutations-ii"}