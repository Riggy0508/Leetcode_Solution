{"id":814618007,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1664845357,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/814618007/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        cur=root\n        \n        while cur:\n            if p.val>cur.val and q.val>cur.val:\n                cur=cur.right\n            elif p.val<cur.val and q.val <cur.val:\n                cur=cur.left\n            else:\n                return cur","compare_result":"1011110010010100101010000000001","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"notes":"","topic_tags":[]}