{"id":859398257,"lang":"python3","lang_name":"Python3","time":"2 months, 1 week","timestamp":1670974363,"status":10,"status_display":"Accepted","runtime":"78 ms","url":"/submissions/detail/859398257/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"26.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        if root ==None or root.val==p.val or root.val==q.val:\n            return root\n        \n        left=self.lowestCommonAncestor(root.left,p,q)\n        right=self.lowestCommonAncestor(root.right,p,q)\n        \n        if left!=None and right!=None:\n            return root\n        elif left!=None:\n            return left\n        else:\n            return right","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false}