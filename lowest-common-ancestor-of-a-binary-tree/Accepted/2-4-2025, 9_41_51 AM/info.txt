{"id":1531346894,"question_id":236,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1738690911,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/1531346894/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"22.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        if root==None or root.val==p.val or root.val==q.val:\n            return root\n\n\n        left=self.lowestCommonAncestor(root.left,p,q)\n        right=self.lowestCommonAncestor(root.right,p,q)\n\n        if left and right:\n            return root\n        \n        return left if left else right","compare_result":"11111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}