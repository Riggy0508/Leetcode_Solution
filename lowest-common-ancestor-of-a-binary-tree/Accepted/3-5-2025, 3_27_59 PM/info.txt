{"id":1564277126,"question_id":236,"lang":"python3","lang_name":"Python3","time":"4 days, 3 hours","timestamp":1741217279,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/1564277126/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"22 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        if not root:\n            return\n\n        if root==p or root==q:\n            return root\n\n        leftD=self.lowestCommonAncestor(root.left,p,q)\n        rightD=self.lowestCommonAncestor(root.right, p, q)\n\n        if leftD and rightD:\n            return root\n\n        return leftD if leftD else rightD","compare_result":"11111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}