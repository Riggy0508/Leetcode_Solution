{"id":831671221,"lang":"python3","lang_name":"Python3","time":"3 months, 4 weeks","timestamp":1666906723,"status":10,"status_display":"Accepted","runtime":"82 ms","url":"/submissions/detail/831671221/","is_pending":"Not Pending","title":"Path Sum II","memory":"15.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:\n        \n        def dfs(root,path,ans,remaingSum):\n            if not root:\n                return\n            \n            path.append(root.val)\n            \n            if not root.left and not root.right and remaingSum==root.val:\n                ans.append(list(path))\n                \n            dfs(root.left,path,ans,remaingSum-root.val)\n            dfs(root.right,path,ans,remaingSum-root.val)\n            \n            path.pop()\n            \n            \n            \n            \n            \n        ans=[]\n        dfs(root,[],ans,targetSum)\n        return ans","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false}