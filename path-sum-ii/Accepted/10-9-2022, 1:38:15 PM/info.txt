{"id":818893120,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1665347895,"status":10,"status_display":"Accepted","runtime":"47 ms","url":"/submissions/detail/818893120/","is_pending":"Not Pending","title":"Path Sum II","memory":"15.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:\n        \n        ans=[]\n        self.dfs(root,[],ans,targetSum)\n        return ans\n    \n    def dfs(self,root,path,ans,remainingSum):\n        if not root:\n            return\n        \n        path.append(root.val)\n        \n        if not root.left and not root.right and remainingSum==root.val:\n            ans.append(list(path))\n            \n        self.dfs(root.left,path,ans,remainingSum-root.val)\n        self.dfs(root.right,path,ans,remainingSum-root.val)\n        path.pop()","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false}