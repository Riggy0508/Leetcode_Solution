{"id":747741845,"lang":"python3","time":"2 months, 1 week","timestamp":1657887099,"status_display":"Accepted","runtime":"1515 ms","url":"/submissions/detail/747741845/","is_pending":"Not Pending","title":"Longest Palindrome by Concatenating Two Letter Words","memory":"38.4 MB","code":"class Solution:\n    def longestPalindrome(self, words: List[str]) -> int:\n        res,looking=0,defaultdict(int)\n        for word in words:\n            if looking[word]:\n                looking[word]-=1\n                res+=4\n                continue\n            looking[word[1]+word[0]]+=1\n        #print(looking[word[1]+word[0]]) ---- smart move\n            \n        for i in looking:\n            if i[0]==i[1] and looking[i]:\n                res+=2\n                break\n                \n        return res","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindrome-by-concatenating-two-letter-words"}