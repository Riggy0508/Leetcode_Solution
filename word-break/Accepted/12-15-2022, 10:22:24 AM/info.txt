{"id":860310930,"question_id":139,"lang":"python3","lang_name":"Python3","time":"2 years, 2 months","timestamp":1671128544,"status":10,"status_display":"Accepted","runtime":"53 ms","url":"/submissions/detail/860310930/","is_pending":"Not Pending","title":"Word Break","memory":"13.9 MB","code":"class Solution:\n    def wordBreak(self, s: str, wordDict: List[str]) -> bool:\n        dp=[False]*(len(s)+1)\n        dp[len(s)]=True\n\n        for i in range(len(s)-1,-1,-1):\n            for w in wordDict:\n                if (i+len(w)<=len(s)) and s[i:i+len(w)]==w:\n                    dp[i]=dp[i+len(w)]\n                if dp[i]:\n                    break\n        \n        return dp[0]\n\n\n\n\n#What we are essentially trying to do is we are checking the length of the word present into the dictionary and calculating it's length.\n#Then we are trying to check if any word is present inside the string s for the same length. If it's present we are returning true. And we are doing so for each position of the string s. So ultimately at position 0 we will have our output. If you have any confusion please refer to the following video. It's pretty well explained. \n#https://www.youtube.com/watch?v=Sx9NNgInc3A","compare_result":"111111111111111111111111111111111111111111111","title_slug":"word-break","has_notes":false,"flag_type":1}