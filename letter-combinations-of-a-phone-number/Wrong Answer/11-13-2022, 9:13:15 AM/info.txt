{"id":842765169,"lang":"python3","lang_name":"Python3","time":"3 months, 1 week","timestamp":1668359595,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/842765169/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"N/A","code":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        letters = {\"2\": \"abc\", \"3\": \"def\", \"4\": \"ghi\", \"5\": \"jkl\", \n                   \"6\": \"mno\", \"7\": \"pqrs\", \"8\": \"tuv\", \"9\": \"wxyz\"}\n        if len(digits)==0:\n            return []\n        \n        combinations=[]\n        \n        def backtrack(index=0,path=[]):\n            if len(path)==len(digits):\n                combinations.append(\"\".join(path.copy()))\n                return\n            combo=letters[digits[index]]   #abc\n            for i in combo:\n                path.append(i)\n                backtrack(index+1,path)\n                path.remove(i)\n\n\n        backtrack()\n        return combinations","compare_result":"1111111111111111110111110","title_slug":"letter-combinations-of-a-phone-number","has_notes":false}