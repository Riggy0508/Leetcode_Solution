{"id":780697474,"lang":"python3","time":"1Â month","timestamp":1661205032,"status_display":"Accepted","runtime":"46 ms","url":"/submissions/detail/780697474/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"14 MB","code":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        \n        digitToChar={\"2\":\"abc\",\n                     \"3\":\"def\",\n                     \"4\":\"ghi\",\n                     \"5\":\"jkl\",\n                     \"6\":\"mno\",\n                     \"7\":\"pqrs\",\n                     \"8\":\"tuv\",\n                     \"9\":\"wxyz\"\n                    }\n        res=[]\n            \n        def backtrack(i,curStr):\n            if len(curStr)==len(digits):\n                res.append(curStr)\n                return\n            for c in digitToChar[digits[i]]:\n                backtrack(i+1,curStr+c)\n                    \n        if digits:\n            backtrack(0,\"\")\n                \n        return res","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}