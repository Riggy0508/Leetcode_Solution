{"id":817465388,"question_id":33,"lang":"python3","lang_name":"Python3","time":"2Â years, 4Â months","timestamp":1665177289,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/817465388/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"14.4 MB","code":"class Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        l,r=0,len(nums)-1\n        \n        while l<=r:\n            mid=(l+r)//2\n            if target==nums[mid]:\n                return mid\n            \n            #Now we are gonna search in the left sorted portion\n            if nums[l]<=nums[mid]:\n                if target>nums[mid] or target<nums[l]:\n                    l=mid+1\n                else:\n                    r=mid-1\n            #Now checking in the right sorted portion\n            else:\n                if target< nums[mid] or target>nums[r]:\n                    r=mid-1\n                else:\n                    l=mid+1\n        return -1\n                \n            ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}