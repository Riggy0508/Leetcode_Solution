{"id":1547935375,"question_id":339,"lang":"python3","lang_name":"Python3","time":"2 weeks, 5 days","timestamp":1739922103,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1547935375/","is_pending":"Not Pending","title":"Nested List Weight Sum","memory":"17.9 MB","code":"# \"\"\"\n# This is the interface that allows for creating nested lists.\n# You should not implement it, or speculate about its implementation\n# \"\"\"\n#class NestedInteger:\n#    def __init__(self, value=None):\n#        \"\"\"\n#        If value is not specified, initializes an empty list.\n#        Otherwise initializes a single integer equal to value.\n#        \"\"\"\n#\n#    def isInteger(self):\n#        \"\"\"\n#        @return True if this NestedInteger holds a single integer, rather than a nested list.\n#        :rtype bool\n#        \"\"\"\n#\n#    def add(self, elem):\n#        \"\"\"\n#        Set this NestedInteger to hold a nested list and adds a nested integer elem to it.\n#        :rtype void\n#        \"\"\"\n#\n#    def setInteger(self, value):\n#        \"\"\"\n#        Set this NestedInteger to hold a single integer equal to value.\n#        :rtype void\n#        \"\"\"\n#\n#    def getInteger(self):\n#        \"\"\"\n#        @return the single integer that this NestedInteger holds, if it holds a single integer\n#        Return None if this NestedInteger holds a nested list\n#        :rtype int\n#        \"\"\"\n#\n#    def getList(self):\n#        \"\"\"\n#        @return the nested list that this NestedInteger holds, if it holds a nested list\n#        Return None if this NestedInteger holds a single integer\n#        :rtype List[NestedInteger]\n#        \"\"\"\n\nclass Solution:\n    def depthSum(self, nestedList: List[NestedInteger]) -> int:\n\n        def dfs(nestedList,depth):\n            total=0\n            for nested in nestedList:\n                if nested.isInteger():\n                    total+=nested.getInteger()*depth\n                else:\n                    total+=dfs(nested.getList(), depth+1)\n            return total\n\n        return dfs(nestedList,1)","compare_result":"1111111111111111111111111","title_slug":"nested-list-weight-sum","has_notes":false,"flag_type":1}