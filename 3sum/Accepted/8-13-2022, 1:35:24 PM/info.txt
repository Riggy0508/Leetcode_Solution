{"id":772894506,"lang":"python3","time":"1 month, 1 week","timestamp":1660422924,"status_display":"Accepted","runtime":"1487 ms","url":"/submissions/detail/772894506/","is_pending":"Not Pending","title":"3Sum","memory":"18.1 MB","code":"class Solution:\n    def threeSum(self, nums: List[int]) -> List[List[int]]:\n        res=[]\n        \n        nums.sort()\n        \n        for i,val in enumerate(nums):\n            if i>0 and val==nums[i-1]:\n                continue\n                \n            l,r=i+1,len(nums)-1\n            while l<r:\n                threeSum=nums[l]+nums[r]+val\n                if threeSum>0:\n                    r-=1\n                elif threeSum<0:\n                    l+=1\n                else:\n                    res.append([val,nums[l],nums[r]])\n                    l+=1\n                    while nums[l]==nums[l-1] and l<r:\n                        l+=1\n        return res\n        \n        \n        \n        \n        res=[]\n        \n        nums.sort()\n        \n        for i,val in enumerate(nums):\n            if i>0 and val ==nums[i-1]:\n                continue\n                \n            l,r=i+1,len(nums)-1\n            \n            while l<r:\n                threeSum=val+nums[l]+nums[r]\n                if threeSum>0:\n                    r-=1\n                elif threeSum<0:\n                    l+=1\n                else:\n                    res.append([val,nums[l],nums[r]])\n                    l+=1\n                    while nums[l]==nums[l-1] and l<r:\n                        l+=1\n        return res\n                ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum"}