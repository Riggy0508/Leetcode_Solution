{"id":807072918,"lang":"python3","lang_name":"Python3","time":"5Â months","timestamp":1663964242,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/807072918/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"15 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):\n        self.val = int(x)\n        self.next = next\n        self.random = random\n\"\"\"\n\nclass Solution:\n    def copyRandomList(self, head: 'Optional[Node]') -> 'Optional[Node]':\n        \n        #here we will be makine use of 2 pass algorithm\n        \n        #first we will copy the node in our hashmap and in the second pass we will make connection's/link between each node\n        \n        #first pass\n        oldCopy={None:None}\n        cur=head\n        while cur:\n            copy=Node(cur.val)\n            oldCopy[cur]=copy\n            cur=cur.next\n            \n        cur=head\n        while cur:\n            copy=oldCopy[cur]\n            copy.next=oldCopy[cur.next]\n            copy.random=oldCopy[cur.random]\n            cur=cur.next\n            \n        return oldCopy[head]\n            ","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false}