{"id":840325906,"question_id":77,"lang":"python3","lang_name":"Python3","time":"2 years, 3 months","timestamp":1668026764,"status":10,"status_display":"Accepted","runtime":"526 ms","url":"/submissions/detail/840325906/","is_pending":"Not Pending","title":"Combinations","memory":"15.9 MB","code":"class Solution:\n    def combine(self, n: int, k: int) -> List[List[int]]:\n        \n        \n        def backtrack(first=1,curr=[]):\n            if len(curr)==k:\n                output.append(curr.copy())\n                return output\n            \n            \n            for i in range(first,n+1):\n                curr.append(i)\n                \n                backtrack(i+1,curr)\n                \n                curr.pop()\n        \n        \n        output=[]\n        backtrack()\n        return output","compare_result":"111111111111111111111111111","title_slug":"combinations","has_notes":false,"flag_type":1}