{"id":1535227553,"question_id":523,"lang":"python3","lang_name":"Python3","time":"1 week, 5 days","timestamp":1738968105,"status":10,"status_display":"Accepted","runtime":"51 ms","url":"/submissions/detail/1535227553/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"38.1 MB","code":"class Solution:\n    def checkSubarraySum(self, nums: List[int], k: int) -> bool:\n        remainingMap={0:-1}\n\n        prefix_sum=0\n\n        for i,val in enumerate(nums):\n            prefix_sum+=val\n            remainder=prefix_sum % k\n\n            if remainder<0:\n                remainder+=k\n\n            if remainder in remainingMap:\n                if i-remainingMap[remainder]>1:\n                    return True\n            else:\n                remainingMap[remainder]=i\n        return False","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}