{"id":831554897,"question_id":106,"lang":"python3","lang_name":"Python3","time":"2 years, 3 months","timestamp":1666892925,"status":10,"status_display":"Accepted","runtime":"558 ms","url":"/submissions/detail/831554897/","is_pending":"Not Pending","title":"Construct Binary Tree from Inorder and Postorder Traversal","memory":"89 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def buildTree(self, inorder: List[int], postorder: List[int]) -> Optional[TreeNode]:\n        if not inorder or not postorder:\n            return\n        \n        root=TreeNode(postorder[-1])\n        mid=inorder.index(postorder[-1])\n        root.left=self.buildTree(inorder[:mid],postorder[:mid])\n        root.right=self.buildTree(inorder[mid+1:], postorder[mid:-1])\n        \n        return root","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-inorder-and-postorder-traversal","has_notes":false,"flag_type":1}