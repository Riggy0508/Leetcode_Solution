{"id":813090693,"question_id":103,"lang":"python3","lang_name":"Python3","time":"2 years, 5 months","timestamp":1664669595,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/813090693/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def zigzagLevelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        res=[]\n        \n        q=collections.deque()\n        q.append(root)\n        \n        while q:\n            qLen=len(q)\n            level=[]\n            for _ in range(qLen):\n                node=q.popleft()\n                if node:\n                    level.append(node.val)\n                    q.append(node.left)\n                    q.append(node.right)\n            \n            if len(res)%2!=0:\n                res.append(level[::-1])\n            else:\n                res.append(level)\n        return res\n                ","compare_result":"000000000000000000000000000000000","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}