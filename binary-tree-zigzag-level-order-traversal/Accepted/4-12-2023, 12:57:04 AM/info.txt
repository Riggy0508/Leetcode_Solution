{"id":932368781,"question_id":103,"lang":"python3","lang_name":"Python3","time":"1 year, 10 months","timestamp":1681286224,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/932368781/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"14.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def zigzagLevelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        res=[]\n        q=collections.deque()\n        q.append(root)\n\n        while q:\n            level=[]\n            qLen=len(q)\n            for _ in range(qLen):\n                node=q.popleft()\n                if node:\n                    level.append(node.val)\n                    q.append(node.left)\n                    q.append(node.right)\n\n            if len(res)%2!=0 and level:\n                res.append(level[::-1])\n            elif len(res)%2==0 and level:\n                res.append(level)\n        return res","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}