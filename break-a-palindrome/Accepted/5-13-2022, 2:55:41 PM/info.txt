{"id":698936038,"lang":"python3","time":"4 months, 2 weeks","timestamp":1652478941,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/698936038/","is_pending":"Not Pending","title":"Break a Palindrome","memory":"13.8 MB","code":"class Solution:\n    def breakPalindrome(self, palindrome: str) -> str:\n        p=list(palindrome)\n        n=len(p)\n        \n        if n==1:\n            return \"\"\n        \n        for i in range(n):\n            if p[i]!='a':\n                p[i]='a'\n                break\n        if p!=p[::-1]: return \"\".join(p)\n        p=list(palindrome)\n        for i in range(n-1,-1,-1):\n            if p[i]==\"a\":\n                p[i]=\"b\"\n                break\n        return \"\".join(p)\n        \n        \n        \"\"\"\n        p=list(palindrome)\n        n=len(p)\n        \n        if n==1:\n             return \"\"\n        for i in range(n):\n            if p[i]!=\"a\":\n                p[i]=\"a\"\n                break\n        if p!=p[::-1]: return \"\".join(p)\n        p=list(palindrome)\n        for i in range(n-1,-1,-1):\n            if p[i]==\"a\":\n                p[i]=\"b\"\n                break\n        return \"\".join(p)\n        \"\"\"","compare_result":"111111111111111111111111111111","title_slug":"break-a-palindrome"}