{"id":810153366,"lang":"python3","lang_name":"Python3","time":"4 months, 4 weeks","timestamp":1664319053,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/810153366/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n        if head is None:\n            return -1\n        slow,fast=head,head.next\n        \n        while fast is not None and fast.next is not None:\n            if slow!=fast:\n                slow=slow.next\n                fast=fast.next.next\n            return True\n            \n            \n        return False","compare_result":"1110111111011101100100","title_slug":"linked-list-cycle","has_notes":false}