{"id":866492807,"question_id":141,"lang":"python3","lang_name":"Python3","time":"2 years, 2 months","timestamp":1672164844,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/866492807/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n        if not head.next:\n            return False\n\n        slow,fast=head,head.next\n\n        while fast and fast.next:\n            if slow==fast:\n                return True\n            slow=slow.next\n            fast=fast.next.next\n        \n        return False","compare_result":"11100000000000000000000","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}