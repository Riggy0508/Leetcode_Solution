{"id":733581798,"lang":"python3","time":"2 months, 4 weeks","timestamp":1656434481,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/733581798/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"17.5 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n        slow,fast=head,head\n        \n        while fast and fast.next:\n            slow=slow.next\n            fast=fast.next.next\n            \n            if slow==fast:\n                return True\n        return False","compare_result":"111111111111111111111","title_slug":"linked-list-cycle"}