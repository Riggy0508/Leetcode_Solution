{"id":866493553,"question_id":141,"lang":"python3","lang_name":"Python3","time":"2 years, 1 month","timestamp":1672164928,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/866493553/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"17.5 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n        if not head:\n            return False\n\n        slow,fast=head,head.next\n\n        while fast and fast.next:\n            if slow==fast:\n                return True\n            slow=slow.next\n            fast=fast.next.next\n        \n        return False","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}