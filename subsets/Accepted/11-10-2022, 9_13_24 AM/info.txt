{"id":840859556,"question_id":78,"lang":"python3","lang_name":"Python3","time":"2 years, 3 months","timestamp":1668100404,"status":10,"status_display":"Accepted","runtime":"69 ms","url":"/submissions/detail/840859556/","is_pending":"Not Pending","title":"Subsets","memory":"14.1 MB","code":"class Solution:\n    def subsets(self, nums: List[int]) -> List[List[int]]:\n        output=[]\n        \n        \n        def backtrack(first=0,curr=[]):\n            if len(curr)==k:\n                output.append(curr.copy())\n                return\n            \n            for i in range(first,n):\n                curr.append(nums[i])\n                \n                backtrack(i+1,curr)\n                \n                curr.pop()\n            \n        \n        \n        \n        \n        \n        n=len(nums)\n        for k in range(n+1):\n            backtrack()\n            \n        return output\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    \n        \n\n        \n        \n        \n        \n        \n#         def backtrack(first=0,curr=[]):\n#             if len(curr)==k:\n#                 output.append(curr.copy())\n#                 return\n            \n#             for i in range(first,n):\n#                 curr.append(nums[i])\n                \n#                 backtrack(i+1,curr)\n                \n#                 curr.pop()\n        \n        \n#         output=[]\n#         n=len(nums)\n        \n#         for k in range(n+1):\n#             backtrack()\n#         return output","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}