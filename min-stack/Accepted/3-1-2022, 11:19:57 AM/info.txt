{"id":651427414,"lang":"python3","time":"6 months, 3 weeks","timestamp":1646162397,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/651427414/","is_pending":"Not Pending","title":"Min Stack","memory":"18 MB","code":"class MinStack:\n\n    def __init__(self):\n        self.items=[]\n        self.min_item=[]\n\n    def push(self, val: int):\n        self.items.append(val);\n        val=min(val,self.min_item[-1] if self.min_item else val)\n        self.min_item.append(val)\n\n    def pop(self):\n        self.items.pop();\n        self.min_item.pop();\n\n    def top(self):\n        return self.items[-1];\n        \n\n    def getMin(self) -> int:\n        return self.min_item[-1]\n\n\n# Your MinStack object will be instantiated and called as such:\n# obj = MinStack()\n# obj.push(val)\n# obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.getMin()","compare_result":"1111111111111111111111111111111","title_slug":"min-stack"}