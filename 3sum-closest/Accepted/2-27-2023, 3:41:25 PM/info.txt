{"id":906178053,"question_id":16,"lang":"python3","lang_name":"Python3","time":"1 year, 11 months","timestamp":1677541285,"status":10,"status_display":"Accepted","runtime":"805 ms","url":"/submissions/detail/906178053/","is_pending":"Not Pending","title":"3Sum Closest","memory":"13.9 MB","code":"class Solution:\n    def threeSumClosest(self, nums: List[int], target: int) -> int:\n        diff=float(\"inf\")\n        nums.sort()\n        \n        for i in range(len(nums)):\n            lo=i+1\n            hi=len(nums)-1\n            while lo<hi:\n                sum1=nums[i]+nums[lo]+nums[hi]\n                if abs(target-sum1)<abs(diff):\n                    diff=target-sum1\n                if sum1<target:\n                    lo+=1\n                else:\n                    hi-=1\n            if diff==0:\n                break\n        return target-diff\n        \n                ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum-closest","has_notes":false,"flag_type":1}