{"id":1561892092,"question_id":893,"lang":"python3","lang_name":"Python3","time":"6 days, 5 hours","timestamp":1741036314,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/1561892092/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"18.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n\n    def build_graph(self,node,parent,graph):\n        if not node:\n            return\n\n        if parent:\n            graph[node.val].append(parent.val)\n            graph[parent.val].append(node.val)\n\n        self.build_graph(node.left, node, graph)\n        self.build_graph(node.right, node, graph)\n\n    def distanceK(self, root: TreeNode, target: TreeNode, k: int) -> List[int]:\n        graph=defaultdict(list)\n        self.build_graph(root,None,graph)\n\n        q=deque([target.val])\n        visited=set()\n        visited.add(target.val)\n        distance=0\n\n        while q:\n            if distance==k:\n                return list(q)\n            for _ in range(len(q)):\n                node=q.popleft()\n                for neigh in graph[node]:\n                    if neigh not in visited:\n                        visited.add(neigh)\n                        q.append(neigh)\n\n            distance+=1\n\n        return []\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"all-nodes-distance-k-in-binary-tree","has_notes":false,"flag_type":1}