{"id":1546774157,"question_id":893,"lang":"python3","lang_name":"Python3","time":"2 days, 4 hours","timestamp":1739834765,"status":10,"status_display":"Accepted","runtime":"53 ms","url":"/submissions/detail/1546774157/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"18.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def distanceK(self, root: TreeNode, target: TreeNode, k: int) -> List[int]:\n        \n        graph=defaultdict(list)\n\n        def build_graph(cur,parent):\n            if cur and parent:\n                graph[cur.val].append(parent.val)\n                graph[parent.val].append(cur.val)\n\n            if cur.left:\n                build_graph(cur.left,cur)\n            if cur.right:\n                build_graph(cur.right,cur)\n\n        build_graph(root,None)\n        visited=set()\n        ans=[]\n        visited.add(target.val)\n        q=deque([(target.val,0)])\n\n        while q:\n            cur,distance=q.popleft()\n\n            if distance==k:\n                ans.append(cur)\n\n            for neigh in graph[cur]:\n                if neigh not in visited:\n                    visited.add(neigh)\n                    q.append((neigh,distance+1))    \n\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"all-nodes-distance-k-in-binary-tree","has_notes":false,"flag_type":1}