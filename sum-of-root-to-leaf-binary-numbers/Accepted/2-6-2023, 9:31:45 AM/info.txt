{"id":892795111,"question_id":1079,"lang":"python3","lang_name":"Python3","time":"2Â years","timestamp":1675704705,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/892795111/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"14.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def sumRootToLeaf(self, root: Optional[TreeNode]) -> int:\n        def preorder(node,binary):\n            if not node:\n                return 0\n            \n            if not node.left and not node.right:\n                return int(binary+str(node.val),2)\n            else:\n                return preorder(node.left,binary+str(node.val))+preorder(node.right,binary+str(node.val))\n\n        return preorder(root,\"\")\n\n\n\n\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers","has_notes":false,"flag_type":1}