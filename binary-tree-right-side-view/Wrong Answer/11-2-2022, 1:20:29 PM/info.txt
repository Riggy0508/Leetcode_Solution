{"id":835612071,"lang":"python3","lang_name":"Python3","time":"3 months, 3 weeks","timestamp":1667420429,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/835612071/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:\n        q=collections.deque()\n        \n        q.append(root)\n        \n        res=[]\n        while q:\n            qLen=len(q)\n            rightNode=None\n            \n            for i in range(qLen):\n                node=q.popleft()\n                if node:\n                    rightNode=node.val\n                    q.append(node.left)\n                    q.append(node.right)\n                    \n            if rightNode:\n                res.append(rightNode)\n        return res","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"binary-tree-right-side-view","has_notes":false}