{"id":835612567,"question_id":199,"lang":"python3","lang_name":"Python3","time":"2 years, 3 months","timestamp":1667420493,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/835612567/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:\n        if not root:\n            return []\n        q=collections.deque()\n        \n        q.append(root)\n        \n        res=[]\n        while q:\n            qLen=len(q)\n            rightNode=None\n            \n            for i in range(qLen):\n                node=q.popleft()\n                if node:\n                    rightNode=node\n                    q.append(node.left)\n                    q.append(node.right)\n                    \n            if rightNode:\n                res.append(rightNode.val)\n        return res","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}