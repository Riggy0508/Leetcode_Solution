{"id":757587814,"lang":"python3","time":"2Â months","timestamp":1658870955,"status_display":"Accepted","runtime":"47 ms","url":"/submissions/detail/757587814/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"14 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:\n        res=[]\n        q=collections.deque([root])\n        \n        while q:\n            rightSide=None\n            qLen=len(q)\n            \n            for i in range(qLen):\n                node=q.popleft()\n                if node:\n                    rightSide=node\n                    q.append(node.left)\n                    q.append(node.right)\n            if rightSide:\n                res.append(rightSide.val)\n        return res\n            ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}