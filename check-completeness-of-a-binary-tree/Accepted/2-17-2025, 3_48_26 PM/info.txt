{"id":1546785970,"question_id":998,"lang":"python3","lang_name":"Python3","time":"2 weeks, 6 days","timestamp":1739836106,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1546785970/","is_pending":"Not Pending","title":"Check Completeness of a Binary Tree","memory":"17.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isCompleteTree(self, root: Optional[TreeNode]) -> bool:\n        if not root:\n            return False\n\n        q=deque([root])\n\n        isComplete=False\n\n        while q:\n            node=q.popleft()\n\n            if node is None:\n                isComplete=True\n            else:\n                if isComplete:\n                    return False\n                \n                q.append(node.left)\n                q.append(node.right)\n\n        return True","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"check-completeness-of-a-binary-tree","has_notes":false,"flag_type":1}