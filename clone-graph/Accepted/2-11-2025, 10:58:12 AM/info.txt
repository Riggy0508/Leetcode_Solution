{"id":1539665138,"question_id":133,"lang":"python3","lang_name":"Python3","time":"1 week, 1 day","timestamp":1739300292,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/1539665138/","is_pending":"Not Pending","title":"Clone Graph","memory":"18.3 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val = 0, neighbors = None):\n        self.val = val\n        self.neighbors = neighbors if neighbors is not None else []\n\"\"\"\n\nfrom typing import Optional\nclass Solution:\n    def cloneGraph(self, node: Optional['Node']) -> Optional['Node']:\n        if not node:\n            return None\n\n        cloneGraph={}\n        def bfs(root):\n            if root in cloneGraph:\n                return cloneGraph[root]\n            \n            new_node=Node(root.val)\n            cloneGraph[root]=new_node\n\n            for neigh in root.neighbors:\n                new_node.neighbors.append(bfs(neigh))\n\n            return new_node\n\n        return bfs(node)","compare_result":"1111111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}