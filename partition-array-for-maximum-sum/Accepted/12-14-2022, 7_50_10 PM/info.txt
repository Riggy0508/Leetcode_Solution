{"id":859980329,"question_id":1121,"lang":"python3","lang_name":"Python3","time":"2 years, 2 months","timestamp":1671076210,"status":10,"status_display":"Accepted","runtime":"657 ms","url":"/submissions/detail/859980329/","is_pending":"Not Pending","title":"Partition Array for Maximum Sum","memory":"15.2 MB","code":"class Solution:\n    def maxSumAfterPartitioning(self, arr: List[int], k: int) -> int:\n        n=len(arr)\n        dp=[-1]*n\n\n\n        def dfs(ind,k):\n            if ind==len(arr):\n                return 0\n\n            if dp[ind]!=-1:\n                return dp[ind]\n            \n            max1,max_sum,length=0,0,0\n\n            for i in range(ind,min(ind+k,n)):\n                length+=1\n                max1=max(max1,arr[i])\n                cur_sum=length*max1+dfs(i+1,k)\n                max_sum=max(cur_sum,max_sum)\n            dp[ind]=max_sum\n\n            return dp[ind]\n\n        return dfs(0,k)","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"partition-array-for-maximum-sum","has_notes":false,"flag_type":1}