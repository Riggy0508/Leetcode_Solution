{"id":876954399,"question_id":200,"lang":"python3","lang_name":"Python3","time":"2 years, 1 month","timestamp":1673547161,"status":10,"status_display":"Accepted","runtime":"407 ms","url":"/submissions/detail/876954399/","is_pending":"Not Pending","title":"Number of Islands","memory":"21.8 MB","code":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        rows=len(grid)\n        cols=len(grid[0])\n        visited=set()\n        directions=[(1,0),(-1,0),(0,1),(0,-1)]\n        islands=0\n\n\n        def bfs(r,c):\n            q=collections.deque()\n            q.append((r,c))\n            visited.add((r,c))\n\n\n\n            while q:\n                row,col=q.popleft()\n                for dr,dc in directions:\n                    r=row+dr\n                    c=col+dc\n\n                    if r in range(rows) and c in range(cols) and grid[r][c]==\"1\" and (r,c) not in visited:\n                        q.append((r,c))\n                        visited.add((r,c))\n\n        \n        for r in range(rows):\n            for c in range(cols):\n                if grid[r][c]==\"1\" and (r,c) not in visited:\n                    islands+=1\n                    bfs(r,c)\n        \n        return islands","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}