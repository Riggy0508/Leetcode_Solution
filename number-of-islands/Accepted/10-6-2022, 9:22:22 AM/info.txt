{"id":816605142,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1665073342,"status":10,"status_display":"Accepted","runtime":"352 ms","url":"/submissions/detail/816605142/","is_pending":"Not Pending","title":"Number of Islands","memory":"16.2 MB","code":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        rows=len(grid)\n        cols=len(grid[0])\n        \n        islands=0\n        \n        grid.append(['0']*(cols+1))\n        for i in range(rows):\n            grid[i].append('0')\n            \n        \n        for i in range(rows):\n            for j in range(cols):\n                if grid[i][j]==\"1\":\n                    self.check_neigh(grid,i,j)\n                    \n                    islands+=1\n        \n        return islands\n    \n    \n    \n    \n    \n    def check_neigh(self,grid,i,j):\n        q=collections.deque()\n        grid[i][j]==\"2\"\n        q.append((i,j))\n        \n        while q:\n            (i,j)= q.popleft()\n            if grid[i-1][j]==\"1\":\n                grid[i-1][j]=2\n                q.append((i-1,j))\n            \n            if grid[i+1][j]==\"1\":\n                grid[i+1][j]=2\n                q.append((i+1,j))\n            \n            if grid[i][j-1]==\"1\":\n                grid[i][j-1]=2\n                q.append((i,j-1))\n                \n            if grid[i][j+1]==\"1\":\n                grid[i][j+1]=2\n                q.append((i,j+1))","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false}