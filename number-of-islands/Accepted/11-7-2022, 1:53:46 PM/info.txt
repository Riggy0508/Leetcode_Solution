{"id":838985453,"question_id":200,"lang":"python3","lang_name":"Python3","time":"2 years, 3 months","timestamp":1667858026,"status":10,"status_display":"Accepted","runtime":"424 ms","url":"/submissions/detail/838985453/","is_pending":"Not Pending","title":"Number of Islands","memory":"21.7 MB","code":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        if not grid:\n            return 0\n        visited=set()\n        rows,cols=len(grid),len(grid[0])\n        \n        \n        \n        \n        def bfs(r,c):\n            directions=[(0,1),(1,0),(-1,0),(0,-1)]\n            q=collections.deque()\n            q.append((r,c))\n            \n            \n            while q:\n                row,col=q.popleft()\n                \n                for dr,dc in directions:\n                        r,c=dr+row,dc+col\n                        \n                        if r in range(rows) and c in range(cols) and grid[r][c]==\"1\" and (r,c) not in visited:\n                            q.append((r,c))\n                            visited.add((r,c))\n        \n        \n        \n        islands=0\n        for r in range(rows):\n            for c in range(cols):\n                if grid[r][c]==\"1\" and (r,c) not in visited:\n                    islands+=1\n                    bfs(r,c)\n        \n        return islands\n                    \n        ","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}