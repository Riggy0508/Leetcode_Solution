{"id":838992605,"question_id":200,"lang":"python3","lang_name":"Python3","time":"2 years, 4 months","timestamp":1667859058,"status":10,"status_display":"Accepted","runtime":"1179 ms","url":"/submissions/detail/838992605/","is_pending":"Not Pending","title":"Number of Islands","memory":"21.5 MB","code":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        rows,cols=len(grid),len(grid[0])\n        \n        island=0\n        visited=set()\n        \n        def bfs(r,c):\n            q=collections.deque()\n            directons=[(0,1),(0,-1),(1,0),(-1,0)]\n            \n            q.append((r,c))\n            \n            while q:\n                \n                row,col=q.popleft()\n                for dr,dc in directons:\n                    r,c=row+dr,col+dc\n                    if r in range(rows) and c in range(cols) and grid[r][c]==\"1\" and (r,c) not in visited:\n                        visited.add((r,c))\n                        q.append((r,c))\n            \n        for r in range(rows):\n            for c in range(cols):\n                if grid[r][c]==\"1\" and (r,c) not in visited:\n                    island+=1\n                    bfs(r,c)\n                    \n                    \n        return island\n        \n        ","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}