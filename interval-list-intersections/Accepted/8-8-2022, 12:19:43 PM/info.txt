{"id":768698346,"lang":"python3","time":"1 month, 2 weeks","timestamp":1659986383,"status_display":"Accepted","runtime":"198 ms","url":"/submissions/detail/768698346/","is_pending":"Not Pending","title":"Interval List Intersections","memory":"14.7 MB","code":"class Solution:\n    def intervalIntersection(self, firstList: List[List[int]], secondList: List[List[int]]) -> List[List[int]]:\n        a,b=0,0\n        N,M=len(firstList),len(secondList)\n        output=[]\n        \n        while (a<N and b<M):\n            start=max(firstList[a][0],secondList[b][0])\n            end=min(firstList[a][1],secondList[b][1])\n            \n            if start<=end:\n                output.append([start,end])\n            if firstList[a][1]<secondList[b][1]:\n                a+=1\n            else:\n                b+=1\n                \n        return output\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interval-list-intersections"}