{"id":817550261,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1665192494,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/817550261/","is_pending":"Not Pending","title":"Design HashMap","memory":"N/A","code":"# Time Complexity : O(n)\n# Space Complexity :O(n)\n# Did this code successfully run on Leetcode : Yes\n# Any problem you faced while coding this : No\n\n\n#I was having difficutly solving this problem using linked_list and to apply the concept of bucket\n#Therefore I used the list method. The get function's complexity will be O(n) worst case.\n\n#But, even after using List this solution  is working on Leetcode\n\n\n\nclass MyHashMap:\n\n    def __init__(self):\n        self.l=[-1 for _ in range(1000000)]\n\n    def put(self, key: int, value: int) -> None:\n        self.l[key]=value\n\n    def get(self, key: int) -> int:   #O(n)\n        return self.l[key]\n\n    def remove(self, key: int) -> None:\n        self.l[key]=-1\n\n\n# Your MyHashMap object will be instantiated and called as such:\n# obj = MyHashMap()\n# obj.put(key,value)\n# param_2 = obj.get(key)\n# obj.remove(key)","compare_result":"111111111111111111111111111111111110","title_slug":"design-hashmap","has_notes":false}