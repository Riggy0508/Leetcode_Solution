{"id":839812289,"question_id":39,"lang":"python3","lang_name":"Python3","time":"2Â years, 3Â months","timestamp":1667961739,"status":10,"status_display":"Accepted","runtime":"175 ms","url":"/submissions/detail/839812289/","is_pending":"Not Pending","title":"Combination Sum","memory":"14 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        results=[]\n        \n        \n        def backtrack(remain,list1,start):\n            if remain==0:\n                results.append(list1.copy())\n                \n            elif remain<0:\n                return\n            \n            \n            for i in range(start,len(candidates)):\n                list1.append(candidates[i])\n                \n                backtrack(remain-candidates[i],list1,i)\n                \n                list1.pop()\n        \n        \n        \n        \n        \n        backtrack(target,[],0)\n        return results","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}