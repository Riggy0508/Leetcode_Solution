{"id":883957894,"question_id":39,"lang":"python3","lang_name":"Python3","time":"2Â years","timestamp":1674505704,"status":10,"status_display":"Accepted","runtime":"87 ms","url":"/submissions/detail/883957894/","is_pending":"Not Pending","title":"Combination Sum","memory":"13.8 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        output=[]\n\n\n        def backtrack(remain,curr,start):\n            if remain==0:\n                output.append(curr.copy())\n                return\n            \n            if remain<0:\n                return\n\n            for j in range(start,len(candidates)):\n                curr.append(candidates[j])\n                backtrack(remain-candidates[j],curr,j)\n                curr.pop()\n\n        backtrack(target,[],0)\n        return output","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}