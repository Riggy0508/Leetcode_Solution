{"id":737696680,"lang":"python3","time":"2 months, 3 weeks","timestamp":1656878035,"status_display":"Accepted","runtime":"63 ms","url":"/submissions/detail/737696680/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"16.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isValidBST(self, root: Optional[TreeNode]) -> bool:\n        def valid(node,left,right):\n            if not node:\n                return True\n            if not(node.val<right and node.val>left):\n                return False\n            \n            return (valid(node.left,left,node.val) and valid(node.right,node.val, right))\n        return valid(root,float(\"-inf\"),float(\"inf\"))\n            ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}