{"id":737710925,"lang":"python3","time":"2 months, 3 weeks","timestamp":1656879581,"status_display":"Accepted","runtime":"99 ms","url":"/submissions/detail/737710925/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"18.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        cur=root\n        \n        while cur:\n            if p.val>cur.val and q.val>cur.val:\n                cur=cur.right\n            elif p.val<cur.val and q.val<cur.val:\n                cur=cur.left\n            else:\n                return cur\n            ","compare_result":"111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree"}