{"id":686777776,"lang":"python3","time":"5Â months","timestamp":1650826378,"status_display":"Accepted","runtime":"415 ms","url":"/submissions/detail/686777776/","is_pending":"Not Pending","title":"Design Underground System","memory":"25.4 MB","code":"class UndergroundSystem:\n\n    def __init__(self):\n        self.i=defaultdict(tuple)\n        \n        self.o=defaultdict(list)\n\n    def checkIn(self, id: int, stationName: str, t: int) -> None:\n        self.i[id]=(t,stationName)\n\n    def checkOut(self, id: int, stationName: str, t: int) -> None:\n        starttime,startstation=self.i[id]\n        total=t-starttime\n        self.o[(startstation,stationName)].append(total)\n\n    def getAverageTime(self, startStation: str, endStation: str) -> float:\n        return sum(self.o[(startStation,endStation)])/len(self.o[(startStation,endStation)])\n        \n\n\n# Your UndergroundSystem object will be instantiated and called as such:\n# obj = UndergroundSystem()\n# obj.checkIn(id,stationName,t)\n# obj.checkOut(id,stationName,t)\n# param_3 = obj.getAverageTime(startStation,endStation)","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"design-underground-system"}