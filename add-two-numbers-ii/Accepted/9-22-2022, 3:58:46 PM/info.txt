{"id":806429188,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1663887526,"status":10,"status_display":"Accepted","runtime":"121 ms","url":"/submissions/detail/806429188/","is_pending":"Not Pending","title":"Add Two Numbers II","memory":"13.9 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    \n    \n    def reverse(self,l1)->Optional[ListNode]:\n        prev=None\n        dummy=ListNode()\n        cur=l1\n        \n        while cur:\n            temp=cur.next\n            cur.next=prev\n            prev=cur\n            cur=temp\n        return prev\n    \n    def add(self,l1,l2)->Optional[ListNode]:\n        carry=0\n        dummy=ListNode\n        cur=dummy\n        \n        while l1 or l2 or carry:\n            v1=l1.val if l1 else 0\n            v2=l2.val if l2 else 0\n            \n            val=v1+v2+carry\n            carry=val//10\n            val=val%10\n            cur.next=ListNode(val)\n            \n            l1=l1.next if l1 else None\n            l2=l2.next if l2 else None\n            cur=cur.next\n            \n        return dummy.next\n        \n    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:\n        l1=self.reverse(l1)\n        l2=self.reverse(l2)\n        ans=self.add(l1,l2)\n        res=self.reverse(ans)\n        \n        return res","compare_resulttitle_slug":"add-two-numbers-ii","has_notes":false,"notes":"","topic_tags":[]}