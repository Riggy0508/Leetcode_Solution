{"id":910371058,"question_id":76,"lang":"python3","lang_name":"Python3","time":"1 year, 11 months","timestamp":1678130174,"status":10,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/910371058/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"14.6 MB","code":"class Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        \n        window={}\n        countT={}\n        for c in t:\n            countT[c]=1+countT.get(c,0)\n        \n        res,resLen=[-1,-1],float(\"inf\")\n        have,need=0,len(countT)\n        l=0\n        for r in range(len(s)):\n            c=s[r]\n            window[c]=1+window.get(c,0)\n            if c in countT and window[c]==countT[c]:\n                have+=1\n            \n            while have==need:\n                if (r-l+1)<resLen:\n                    resLen=(r-l+1)\n                    res=[l,r]\n                \n                window[s[l]]-=1\n                if s[l] in countT and window[s[l]]<countT[s[l]]:\n                    have-=1\n                l+=1\n        l,r=res\n        return s[l:r+1] if resLen!=float(\"infinity\") else \"\"\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}