{"id":1555158668,"question_id":314,"lang":"python3","lang_name":"Python3","time":"1 week, 5 days","timestamp":1740501960,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1555158668/","is_pending":"Not Pending","title":"Binary Tree Vertical Order Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def verticalOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        \n        q=deque([(root,0)])\n        hash1=defaultdict(list)\n\n        while q:\n            node,col=q.popleft()\n            hash1[col].append(node.val)\n\n            if node.left:\n                q.append((node.left,col-1))\n            if node.right:\n                q.append((node.right,col+1))\n\n\n        return [hash1[key] for key in sorted(hash1.keys())]","compare_result":"1110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-vertical-order-traversal","has_notes":false,"flag_type":1}