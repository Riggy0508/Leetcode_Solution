{"id":1487044022,"question_id":511,"lang":"python3","lang_name":"Python3","time":"2 months, 2 weeks","timestamp":1735033350,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1487044022/","is_pending":"Not Pending","title":"All Paths from Source Lead to Destination","memory":"N/A","code":"class Solution:\n    def leadsToDestination(self, n: int, edges: List[List[int]], source: int, destination: int) -> bool:\n        \n        graph=defaultdict(list)\n\n        for start,end in edges:\n            graph[start].append(end)\n\n        visited=set()\n\n\n        def dfs(source):\n\n            if source ==destination:\n                return len(graph[source])==0\n\n\n            if source in visited or not graph[source]:\n                return False\n\n            \n            visited.add(source)\n\n            for adj in graph[source]:\n                if not dfs(adj):\n                    return False\n                \n            visited.remove(source)\n            return True\n\n        return dfs(source)\n","compare_result":"1111111111111111111111111111111111111111111111111111111000","title_slug":"all-paths-from-source-lead-to-destination","has_notes":false,"flag_type":1}