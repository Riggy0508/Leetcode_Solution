{"id":748398514,"lang":"python3","time":"2 months, 1 week","timestamp":1657961610,"status_display":"Accepted","runtime":"67 ms","url":"/submissions/detail/748398514/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"18.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isBalanced(self, root: Optional[TreeNode]) -> bool:\n        def dfs(root):\n            if not root:\n                return [True,0]\n            \n            left,right=dfs(root.left),dfs(root.right)\n            balanced=(left[0] and right[0] and abs(left[1]-right[1])<=1)\n            return [balanced,1+max(left[1],right[1])]\n        \n        return dfs(root)[0]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}