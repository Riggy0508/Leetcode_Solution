{"id":834128730,"lang":"python3","lang_name":"Python3","time":"1 week, 1 day","timestamp":1667235025,"status":10,"status_display":"Accepted","runtime":"120 ms","url":"/submissions/detail/834128730/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"18.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isBalanced(self, root: Optional[TreeNode]) -> bool:\n        if not root:\n            return True\n        \n        return self.height(root)!=-1\n    \n    def height(self,root):\n        if not root:\n            return 0\n        \n        left=self.height(root.left)\n        right=self.height(root.right)\n        \n        if abs(left-right)>1:\n            return -1\n        if left==-1 or right==-1:\n            return -1\n        \n        return max(left,right)+1\n        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"notes":"","topic_tags":[]}