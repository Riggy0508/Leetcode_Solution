{"id":807249078,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1663992241,"status":10,"status_display":"Accepted","runtime":"301 ms","url":"/submissions/detail/807249078/","is_pending":"Not Pending","title":"Design Linked List","memory":"14.8 MB","code":"class ListNode:\n    def __init__(self,val,next=None):\n        self.val=val\n        self.next=next\n\nclass MyLinkedList:\n\n    def __init__(self):\n        self.head=None\n        self.size=0\n\n    def get(self, index: int) -> int:\n        if index>=self.size:\n            return -1\n        node=self.head\n        for _ in range(index):\n            node=node.next\n        return node.val\n            \n\n    def addAtHead(self, val: int) -> None:\n        self.addAtIndex(0,val)\n\n    def addAtTail(self, val: int) -> None:\n        self.addAtIndex(self.size,val)\n\n    def addAtIndex(self, index: int, val: int) -> None:\n        if index>self.size:\n            return\n        node=self.head\n        new_node=ListNode(val)\n        \n        if index==0:\n            new_node.next=node\n            self.head=new_node\n        else:\n            for _ in range(index-1):\n                node=node.next\n            new_node.next=node.next\n            node.next=new_node\n        self.size+=1\n\n    def deleteAtIndex(self, index: int) -> None:\n        if index>=self.size:\n            return\n        if index==0:\n            self.head=self.head.next\n        else:\n            node=self.head\n            for _ in range(index-1):\n                node=node.next\n                \n            node.next=node.next.next\n        self.size-=1\n\n\n# Your MyLinkedList object will be instantiated and called as such:\n# obj = MyLinkedList()\n# param_1 = obj.get(index)\n# obj.addAtHead(val)\n# obj.addAtTail(val)\n# obj.addAtIndex(index,val)\n# obj.deleteAtIndex(index)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-linked-list","has_notes":false,"notes":"","topic_tags":[]}