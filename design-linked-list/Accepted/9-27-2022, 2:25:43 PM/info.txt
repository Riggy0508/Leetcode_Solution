{"id":810115688,"question_id":838,"lang":"python3","lang_name":"Python3","time":"2 years, 4 months","timestamp":1664313943,"status":10,"status_display":"Accepted","runtime":"643 ms","url":"/submissions/detail/810115688/","is_pending":"Not Pending","title":"Design Linked List","memory":"14.8 MB","code":"class ListNode:\n    def __init__(self,x):\n        self.val=x\n        self.next=None\n\nclass MyLinkedList:\n\n    def __init__(self):\n        self.head=ListNode(0)\n        #self.tail=None\n        self.size=0\n        \n\n    def get(self, index: int) -> int:\n        if index<0 or index>=self.size:\n            return -1\n        cur=self.head\n        for _ in range(index+1):\n            cur=cur.next\n        return cur.val\n\n    def addAtHead(self, val: int) -> None:\n        self.addAtIndex(0,val)\n\n    def addAtTail(self, val: int) -> None:\n        self.addAtIndex(self.size,val)\n\n    def addAtIndex(self, index: int, val: int) -> None:\n        if index>self.size:\n            return\n        \n        \n        #if index<0:\n            #index=0\n            \n        self.size+=1\n        prev=self.head\n        for _ in range(index):\n            prev=prev.next\n        \n        newNode=ListNode(val)\n        newNode.next=prev.next\n        prev.next=newNode\n\n    def deleteAtIndex(self, index: int) -> None:\n        if index<0 or index>=self.size:\n            return\n        \n        self.size-=1\n        prev=self.head\n        for _ in range(index):\n            prev=prev.next\n            \n        prev.next=prev.next.next\n\n\n# Your MyLinkedList object will be instantiated and called as such:\n# obj = MyLinkedList()\n# param_1 = obj.get(index)\n# obj.addAtHead(val)\n# obj.addAtTail(val)\n# obj.addAtIndex(index,val)\n# obj.deleteAtIndex(index)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-linked-list","has_notes":false,"flag_type":1}