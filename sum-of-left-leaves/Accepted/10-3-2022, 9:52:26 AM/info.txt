{"id":814352259,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1664815946,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/814352259/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"14.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def sumOfLeftLeaves(self, root: Optional[TreeNode]) -> int:\n        if not root:\n            return 0\n        \n        def pro_subTree(node,is_left):\n            total=0\n            if node.left is None and node.right is None:\n                return node.val if is_left else 0\n            \n            if node.left:\n                total+=pro_subTree(node.left,True)\n            if node.right:\n                total+=pro_subTree(node.right,False)\n            return total\n            \n        return pro_subTree(root,False)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"notes":"","topic_tags":[]}