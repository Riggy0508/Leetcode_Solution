{"id":813288903,"question_id":404,"lang":"python3","lang_name":"Python3","time":"2 years, 4 months","timestamp":1664690182,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/813288903/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"14.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\n#The main logic begin\nclass Solution:\n    def sumOfLeftLeaves(self, root: Optional[TreeNode]) -> int:\n        #Checking if root is available if not we will return 0 immediately \n        if root is None:\n            return 0\n        \n        def pro_subtree(node,is_left):\n            if node.left is None and node.right is None:\n                return node.val if is_left else 0\n            \n            total=0\n            if node.left:\n                total+=pro_subtree(node.left,True)\n            if node.right:\n                total+=pro_subtree(node.right,False)\n            return total\n            \n        \n        return pro_subtree(root,False)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}