{"id":864972061,"question_id":301,"lang":"python3","lang_name":"Python3","time":"2 years, 1 month","timestamp":1671920798,"status":10,"status_display":"Accepted","runtime":"323 ms","url":"/submissions/detail/864972061/","is_pending":"Not Pending","title":"Remove Invalid Parentheses","memory":"15.5 MB","code":"class Solution:\n    def removeInvalidParentheses(self, s: str) -> List[str]:\n        res=[]\n        q=collections.deque([])\n\n        if not s or len(s)==0:\n            return res\n\n        seen=set()\n        flag=False\n\n        q.append(s)\n        seen.add(s)\n\n        while q and not flag:\n            qLen=len(q)\n            for i in range(qLen):\n                curr=q.popleft()\n                #print(curr)\n                if self.isValid(curr):\n                    flag=True\n                    res.append(curr)\n                else:\n                    if not flag:\n                        #print(curr)\n                        for j in range(len(curr)):\n                            child=curr[0:j]+curr[j+1:]\n                            #print(child)\n                            if child not in seen:\n                                q.append(child)\n                                seen.add(child)\n        return res\n\n    def isValid(self,s):\n        count=0\n\n        for k in range(len(s)):\n            if s[k]==\"(\":\n                count+=1\n            else:\n                if s[k]==\")\":\n                    if count==0:\n                        return False\n                    count-=1\n        return count==0\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-invalid-parentheses","has_notes":false,"flag_type":1}