{"id":833424508,"lang":"python3","lang_name":"Python3","time":"1 week, 2 days","timestamp":1667144147,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/833424508/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"14 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:\n        dummyNode=ListNode()\n        dummyNode.next=head\n        \n        lp=dummyNode\n        curr=head\n        \n        #Traversing till the left point\n        for i in range(left-1):\n            curr=curr.next\n            lp=lp.next\n            \n            \n        #Reversing the range of our linked list\n        prev=None\n        for i in range(right-left+1):\n            temp=curr.next\n            curr.next=prev\n            prev=curr\n            curr=temp\n        \n        #Considering the example 1. Creating the link's between Node 1 and Node 4 +  Node 2 and Node 5\n        #Before going ahead one should notice that now, our current is pointing towards 5 & our lp is pointing at 1 & prev is pointing at 4\n        \n        lp.next.next=curr\n        lp.next=prev\n        \n        return dummyNode.next","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii","has_notes":false,"notes":"","topic_tags":[]}