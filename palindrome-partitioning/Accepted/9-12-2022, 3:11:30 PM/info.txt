{"id":798304988,"lang":"python3","time":"1 week, 5 days","timestamp":1663020690,"status_display":"Accepted","runtime":"1765 ms","url":"/submissions/detail/798304988/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"30.3 MB","code":"class Solution:\n    def partition(self, s: str) -> List[List[str]]:\n        res=[]\n        part=[]\n        \n        def dfs(i):\n            if i>=len(s):\n                res.append(part.copy())\n                return\n            for j in range(i,len(s)):\n                if self.isPali(s,i,j):\n                    part.append(s[i:j+1])\n                    dfs(j+1)\n                    part.pop()\n                    \n                    \n        dfs(0)\n        return res\n    def isPali(self,s,l,r):\n        while l<r:\n            if s[l]!=s[r]:\n                return False\n            l,r=l+1,r-1\n            \n        return True\n                    \n                ","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning"}