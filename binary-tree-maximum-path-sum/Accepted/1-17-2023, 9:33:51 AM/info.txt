{"id":880040556,"lang":"python3","lang_name":"Python3","time":"1 month, 1 week","timestamp":1673976831,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/880040556/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"21.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxPathSum(self, root: Optional[TreeNode]) -> int:\n\n        res=[root.val]\n\n        def dfs(root):\n            if not root:\n                return 0\n\n            leftMax=dfs(root.left)\n            rightMax=dfs(root.right)\n            leftMax=max(leftMax,0)\n            rightMax=max(0,rightMax)\n\n            #Calculating the max with split\n            res[0]=max(res[0],leftMax+rightMax+root.val)\n\n            return root.val+max(leftMax,rightMax)\n\n        dfs(root)\n        return res[0]\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false}