{"id":678605924,"lang":"python3","time":"5 months, 2 weeks","timestamp":1649718664,"status_display":"Accepted","runtime":"1405 ms","url":"/submissions/detail/678605924/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"38.8 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def isPalindrome(self, head: Optional[ListNode]) -> bool:\n        fast=head\n        slow=head\n        \n        #finding middle(slow)\n        while fast and fast.next:\n            fast=fast.next.next\n            slow=slow.next\n            \n        \n        #reverse second half\n        prev=None\n        while slow:\n            temp=slow.next\n            slow.next=prev\n            prev=slow\n            slow=temp\n        \n        #checking for palindrome\n        \n        left,right=head,prev\n        while right:\n            if left.val!=right.val:\n                return False\n            left=left.next\n            right=right.next\n        return True\n        \n            \n                ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list"}