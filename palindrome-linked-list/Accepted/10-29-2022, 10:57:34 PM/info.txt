{"id":833175396,"lang":"python3","lang_name":"Python3","time":"3 months, 3 weeks","timestamp":1667109454,"status":10,"status_display":"Accepted","runtime":"762 ms","url":"/submissions/detail/833175396/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"38.9 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def isPalindrome(self, head: Optional[ListNode]) -> bool:\n        slow=head\n        fast=head.next\n        \n        #find middle\n        while fast and fast.next:\n            slow=slow.next\n            fast=fast.next.next\n            \n        \n        #Reverse the second half\n        second=slow.next\n        prev=slow.next=None\n        \n        while second:\n            temp=second.next\n            second.next=prev\n            prev=second\n            second=temp\n            \n            \n        #check if palindrone or not\n        first=head\n        second=prev\n        while second:\n            if first.val!=second.val:\n                return False\n            first=first.next\n            second=second.next\n        return True","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false}