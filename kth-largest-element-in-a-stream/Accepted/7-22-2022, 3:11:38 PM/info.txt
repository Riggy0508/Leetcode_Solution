{"id":754067855,"lang":"python3","time":"2Â months","timestamp":1658527898,"status_display":"Accepted","runtime":"140 ms","url":"/submissions/detail/754067855/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"18 MB","code":"class KthLargest:\n\n    def __init__(self, k: int, nums: List[int]):\n        \n        self.minHeap,self.k=nums,k\n        heapq.heapify(self.minHeap)\n        \n        while len(self.minHeap)>k:\n            heapq.heappop(self.minHeap)\n            \n    def add(self, val: int) -> int:\n        heapq.heappush(self.minHeap,val)\n        if len(self.minHeap)>self.k:\n            heapq.heappop(self.minHeap)\n        return self.minHeap[0]\n\n\n# Your KthLargest object will be instantiated and called as such:\n# obj = KthLargest(k, nums)\n# param_1 = obj.add(val)","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream"}