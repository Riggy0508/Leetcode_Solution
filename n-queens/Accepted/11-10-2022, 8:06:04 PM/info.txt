{"id":841133035,"question_id":51,"lang":"python3","lang_name":"Python3","time":"2 years, 3 months","timestamp":1668139564,"status":10,"status_display":"Accepted","runtime":"101 ms","url":"/submissions/detail/841133035/","is_pending":"Not Pending","title":"N-Queens","memory":"14.4 MB","code":"class Solution:\n    def solveNQueens(self, n: int) -> List[List[str]]:\n        #In order to check track of the queens, and take care that no two queens are placed in same row or same col or positive-diagonal or negative-diagonal\n        #Before solving this question one should also know that the fact that, every positive diagon have the same property as (r+c) and negative_diag as (r-c)\n        \n        cols=set()\n        pos_diag=set()\n        neg_diag=set()\n        \n        res=[] # this is gonna be our output list which we are gonna return\n        #first we are gonna start with making the board \n        board=[[\".\"]*n for i in range(n)]\n        \n        \n        #in our backtrack we are gonna use r as the row that we wanna work on\n        def backtrack(r):\n            if r==n:\n                copy=[\"\".join(row) for row in board]\n                res.append(copy)\n                return\n            \n            #Because we know that we our column size if also gonna be equal to n\n            for c in range(n):\n                \n                #we are checking if the queen is already presend in the pos_dia or neg_dia or in the same column if so we are gonna skip it and move to the next one\n                if c in cols or (r+c) in pos_diag or (r-c) in neg_diag:\n                    continue\n                \n                cols.add(c)\n                pos_diag.add(r+c)\n                neg_diag.add(r-c)\n                board[r][c]=\"Q\"\n                \n                backtrack(r+1)\n                \n                cols.remove(c)\n                pos_diag.remove(r+c)\n                neg_diag.remove(r-c)\n                board[r][c]=\".\"\n                \n        backtrack(0)\n        return res\n        ","compare_result":"111111111","title_slug":"n-queens","has_notes":false,"flag_type":1}