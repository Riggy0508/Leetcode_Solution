{"id":798097621,"lang":"python3","time":"1 week, 6 days","timestamp":1663002458,"status_display":"Accepted","runtime":"99 ms","url":"/submissions/detail/798097621/","is_pending":"Not Pending","title":"N-Queens","memory":"14.4 MB","code":"class Solution:\n    def solveNQueens(self, n: int) -> List[List[str]]:\n        col=set()\n        posDig=set()\n        negDig=set()\n        \n        res=[]\n        board=[[\".\"]* n for i in range(n)]\n        def backtrack(r):\n            if r==n:\n                copy=[\"\".join(row) for row in board]\n                res.append(copy)\n                return\n            \n            for c in range(n):\n                if c in col or (r+c) in posDig or (r-c) in negDig:\n                    continue\n                    \n                col.add(c)\n                posDig.add(r+c)\n                negDig.add(r-c)\n                board[r][c]=\"Q\"\n                \n                backtrack(r+1)\n                \n                col.remove(c)\n                posDig.remove(r+c)\n                negDig.remove(r-c)\n                board[r][c]=\".\"\n                \n        backtrack(0)\n        return res","compare_result":"111111111","title_slug":"n-queens"}