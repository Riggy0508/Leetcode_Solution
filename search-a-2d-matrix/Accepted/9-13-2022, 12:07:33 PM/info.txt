{"id":799045674,"lang":"python3","time":"1 week, 4 days","timestamp":1663096053,"status_display":"Accepted","runtime":"83 ms","url":"/submissions/detail/799045674/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"14.4 MB","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        row,col=len(matrix),len(matrix[0])\n        \n        top,bot=0,row-1\n        while top<=bot:\n            row=(top+bot)//2\n            if target>matrix[row][-1]:\n                top=row +1\n            elif target<matrix[row][0]:\n                bot=row-1\n            else:\n                break\n                \n        if not(top<=bot): return False\n        row=(top+bot)//2\n        l,r=0,col-1\n        while l<=r:\n            m=(l+r)//2\n            if target>matrix[row][m]:\n                l=m+1\n            elif target<matrix[row][m]:\n                r=m-1\n            else:\n                return True\n            \n        return False\n                ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix"}