{"id":766160677,"lang":"python3","time":"1 month, 2 weeks","timestamp":1659729406,"status_display":"Accepted","runtime":"54 ms","url":"/submissions/detail/766160677/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"14.4 MB","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        rows,cols=len(matrix),len(matrix[0])\n        \n        top=0\n        bot=rows-1\n        \n        while top<=bot:\n            row=(top+bot)//2\n            if target>matrix[row][-1]:\n                top=row+1\n            elif target<matrix[row][0]:\n                bot=row-1\n            else:\n                break\n                \n        if not (top<=bot):\n            return False\n        \n        l,r=0,cols-1\n        row=(top+bot)//2\n        while l<=r:\n            mid=(l+r)//2\n            if target>matrix[row][mid]:\n                l=mid+1\n            elif target<matrix[row][mid]:\n                r=mid-1\n            else:\n                return True\n            \n        return False\n    ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix"}