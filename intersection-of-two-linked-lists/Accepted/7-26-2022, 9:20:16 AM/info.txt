{"id":757360157,"lang":"python3","time":"2Â months","timestamp":1658852416,"status_display":"Accepted","runtime":"227 ms","url":"/submissions/detail/757360157/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"29.9 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:\n        p1,p2=headA,headB\n        \n        while p1!=p2:\n            p1=headB if p1 is None else p1.next\n            p2=headA if p2 is None else p2.next\n        return p1","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}