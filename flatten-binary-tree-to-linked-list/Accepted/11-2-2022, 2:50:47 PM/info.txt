{"id":835652940,"lang":"python3","lang_name":"Python3","time":"3 months, 3 weeks","timestamp":1667425847,"status":10,"status_display":"Accepted","runtime":"74 ms","url":"/submissions/detail/835652940/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"15.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def flatten(self, root: Optional[TreeNode]) -> None:\n        \"\"\"\n        Do not return anything, modify root in-place instead.\n        \"\"\"\n        def dfs(root):\n            if not root:\n                return None\n            \n            leftTail=dfs(root.left)\n            rightTail=dfs(root.right)\n            \n            if leftTail:\n                leftTail.right=root.right\n                # root.right.right = root.right\n                root.right=root.left\n                root.left=None\n            \n            ans=rightTail or leftTail or root\n            return ans\n        \n        \n        \n        dfs(root)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false}