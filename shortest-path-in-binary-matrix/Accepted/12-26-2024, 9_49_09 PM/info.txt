{"id":1489478606,"question_id":1171,"lang":"python3","lang_name":"Python3","time":"2 months, 1 week","timestamp":1735278549,"status":10,"status_display":"Accepted","runtime":"200 ms","url":"/submissions/detail/1489478606/","is_pending":"Not Pending","title":"Shortest Path in Binary Matrix","memory":"19.1 MB","code":"class Solution:\n    def shortestPathBinaryMatrix(self, grid: List[List[int]]) -> int:\n        N=len(grid)\n\n        dire=[[0,1],[1,0],[0,-1],[-1,0],\n              [1,1],[-1,-1],[-1,1],[1,-1]]\n\n        q=deque([(0,0,1)]) #r,c,length\n        visit=set((0,0))\n\n        while q:\n            r,c,length=q.popleft()\n            if (min(r,c) < 0 or max(r,c) >=N or grid[r][c]):\n                continue\n            if r==N-1 and c==N-1:\n                return length\n\n            for dr,dc in dire:\n                if (r+dr,c+dc) not in visit:\n                    q.append((r+dr,c+dc,length+1))\n                    visit.add((r+dr,c+dc))\n\n        return -1","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-in-binary-matrix","has_notes":false,"flag_type":1}