{"id":1559644471,"question_id":1171,"lang":"python3","lang_name":"Python3","time":"1 week, 1 day","timestamp":1740862455,"status":10,"status_display":"Accepted","runtime":"117 ms","url":"/submissions/detail/1559644471/","is_pending":"Not Pending","title":"Shortest Path in Binary Matrix","memory":"18.5 MB","code":"class Solution:\n    def shortestPathBinaryMatrix(self, grid: List[List[int]]) -> int:\n        n=len(grid)\n        if grid[0][0]==1 or grid[n-1][n-1]:\n            return -1\n\n        rows=len(grid)\n        cols=len(grid[0])\n\n        q=deque([(0,0,1)])\n\n        grid[0][0]=1\n\n        directions=[[0,1],[1,0],[0,-1],[-1,0],[1,1],[-1,-1],[-1,1],[1,-1]]\n\n        while q:\n            r,c,distance=q.popleft()\n\n            if r==n-1 and c==n-1:\n                return distance\n\n            for dr,dc in directions:\n                r1=dr+r\n                c1=dc+c\n\n                if 0<=r1<rows and 0<=c1<cols and grid[r1][c1]==0:\n                    q.append((r1,c1,distance+1))\n\n                    grid[r1][c1]=1\n\n        \n        return -1","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-in-binary-matrix","has_notes":false,"flag_type":1}