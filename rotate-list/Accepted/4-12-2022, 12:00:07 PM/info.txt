{"id":679159478,"lang":"python3","time":"5 months, 2 weeks","timestamp":1649790007,"status_display":"Accepted","runtime":"71 ms","url":"/submissions/detail/679159478/","is_pending":"Not Pending","title":"Rotate List","memory":"13.8 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:\n        if not head:\n            return head\n        \n        tail,length=head,1\n        \n        while tail.next:\n            tail=tail.next\n            length+=1\n        print(tail.val,length)\n        \n        k=k%length\n        \n        if k==0:\n            return head\n        \n        cur=head\n        for i in range(length-k-1):\n            cur=cur.next\n        newHead=cur.next\n        cur.next=None\n        tail.next=head\n        return newHead","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list"}