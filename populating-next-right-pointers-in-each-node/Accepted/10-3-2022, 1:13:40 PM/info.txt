{"id":814488859,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1664828020,"status":10,"status_display":"Accepted","runtime":"139 ms","url":"/submissions/detail/814488859/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node","memory":"15.8 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):\n        self.val = val\n        self.left = left\n        self.right = right\n        self.next = next\n\"\"\"\n\nclass Solution:\n    def connect(self, root: 'Optional[Node]') -> 'Optional[Node]':\n        \n        if not root:\n            return root\n        q=collections.deque()\n        q.append(root)\n        \n        while q:\n            qLen=len(q)\n            for i in range(qLen):\n                node=q.popleft()\n                \n                #Because we wanna add null/# at the end of each level. The below if loop helps us to get the last node in the queue.\n                if i<qLen-1:\n                    node.next=(q[0])\n                if node.left:\n                    q.append(node.left)\n                if node.right:\n                    q.append(node.right)\n        \n        return root","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node","has_notes":false}