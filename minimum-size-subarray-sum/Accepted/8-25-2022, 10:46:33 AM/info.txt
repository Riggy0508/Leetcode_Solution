{"id":783276135,"lang":"python3","time":"1Â month","timestamp":1661449593,"status_display":"Accepted","runtime":"505 ms","url":"/submissions/detail/783276135/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"27.1 MB","code":"class Solution:\n    def minSubArrayLen(self, target: int, nums: List[int]) -> int:\n        l=total=0\n        res=float(\"inf\")\n        \n        for r in range(len(nums)):\n            total+=nums[r]\n            while total>=target:\n                res=min(r-l+1,res)\n                total-=nums[l]\n                l+=1\n        return 0 if res==float(\"inf\") else res","compare_result":"11111111111111111111","title_slug":"minimum-size-subarray-sum"}