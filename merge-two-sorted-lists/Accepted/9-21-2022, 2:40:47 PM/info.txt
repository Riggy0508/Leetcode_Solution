{"id":805615613,"question_id":21,"lang":"python3","lang_name":"Python3","time":"2 years, 5 months","timestamp":1663796447,"status":10,"status_display":"Accepted","runtime":"77 ms","url":"/submissions/detail/805615613/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"13.8 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:\n        \n        l1 = list1\n        l2 = list2\n        \n        \n        dummyNode = ListNode()\n        \n        previousNode = dummyNode\n        \n        while l1 and l2:\n            if l1.val <= l2.val:\n                previousNode.next = l1\n                previousNode = previousNode.next\n                l1 = l1.next\n            else:\n                previousNode.next = l2\n                previousNode = previousNode.next\n                l2 = l2.next\n        \n        if l1:\n            previousNode.next = l1\n            \n        if l2:\n            previousNode.next = l2\n            \n        return dummyNode.next\n            \n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}