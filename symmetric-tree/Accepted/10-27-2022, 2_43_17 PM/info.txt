{"id":831673060,"question_id":101,"lang":"python3","lang_name":"Python3","time":"2 years, 4 months","timestamp":1666906997,"status":10,"status_display":"Accepted","runtime":"71 ms","url":"/submissions/detail/831673060/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: Optional[TreeNode]) -> bool:\n        if not root:\n            return True\n        \n        return self.isMirror(root.left,root.right)\n    \n    def isMirror(self,left,right):\n        if left and right:\n            return left.val==right.val and self.isMirror(left.left,right.right) and self.isMirror(left.right,right.left)\n        return left==right","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}