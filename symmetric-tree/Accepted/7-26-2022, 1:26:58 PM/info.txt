{"id":757552806,"lang":"python3","time":"2Â months","timestamp":1658867218,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/757552806/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: Optional[TreeNode]) -> bool:\n        if root is None:\n            return True\n        \n        return self.isMirror(root.left,root.right)\n    \n    def isMirror(self,leftroot,rightroot):\n        if leftroot and rightroot:\n            return leftroot.val==rightroot.val and self.isMirror(leftroot.left,rightroot.right) and self.isMirror(leftroot.right,rightroot.left)\n        return leftroot==rightroot","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}