{"id":860830359,"question_id":490,"lang":"python3","lang_name":"Python3","time":"2 years, 2 months","timestamp":1671223989,"status":10,"status_display":"Accepted","runtime":"260 ms","url":"/submissions/detail/860830359/","is_pending":"Not Pending","title":"The Maze","memory":"14.5 MB","code":"class Solution:\n    def hasPath(self, maze: List[List[int]], start: List[int], destination: List[int]) -> bool:\n\n        directions=[(-1,0),(1,0),(0,-1),(0,1)]\n\n        rows=len(maze)\n        cols=len(maze[0])\n\n        stack=[]\n        stack.append((start[0],start[1]))\n\n        seen=set()\n        seen.add((start[0],start[1]))\n\n        while stack:\n            cur_i,cur_j=stack.pop()\n\n            for d in directions:\n                ni=cur_i\n                nj=cur_j\n\n                while 0<=ni<rows and 0<=nj<cols and maze[ni][nj]==0:\n                    ni+=d[0]\n                    nj+=d[1]\n\n                ni-=d[0]\n                nj-=d[1]\n\n                if ni==destination[0] and nj==destination[1]:\n                    return True\n\n                \n                if (ni,nj) not in seen:\n                    stack.append((ni,nj))\n                    seen.add((ni,nj))\n\n        return False\n\n\n    #https://www.youtube.com/watch?v=e_75Z90j0IM","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-maze","has_notes":false,"flag_type":1}