{"id":893662846,"question_id":366,"lang":"python3","lang_name":"Python3","time":"2Â years","timestamp":1675811027,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/893662846/","is_pending":"Not Pending","title":"Find Leaves of Binary Tree","memory":"13.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def findLeaves(self, root: Optional[TreeNode]) -> List[List[int]]:\n        res=collections.defaultdict(list)\n\n        def dfs(node,layer):\n            if not node:\n                return layer\n            \n            left=dfs(node.left,layer)\n            right=dfs(node.right,layer)\n\n            layer=max(left,right)\n            res[layer].append(node.val)\n\n            return layer+1\n\n        dfs(root,0)\n        return res.values()","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-leaves-of-binary-tree","has_notes":false,"flag_type":1}