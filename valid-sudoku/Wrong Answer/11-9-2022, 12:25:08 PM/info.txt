{"id":840316831,"question_id":36,"lang":"python3","lang_name":"Python3","time":"2 years, 3 months","timestamp":1668025508,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/840316831/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"N/A","code":"class Solution:\n    def isValidSudoku(self, board: List[List[str]]) -> bool:\n        \n        #Creating a set for each row, col and the 3x3 grid\n        \n        rows=collections.defaultdict(set)\n        cols=collections.defaultdict(set)\n        square=collections.defaultdict(set)   ##store the key pair\n        \n        for r in range(9):\n            for c in range(9):\n                \n                #As given in the questions we need not do anythign when it comes to empty places\n                if board[r][c]==\".\":\n                    continue\n                else:\n                    if board[r][c] not in rows[r] or board[r][c] not in cols[c] or board[r][c] not in square[(r//3,c//3)]:\n                        rows[r].add(board[r][c])\n                        cols[c].add(board[r][c])\n                        square[(r//3,c//3)].add(board[r][c])\n                    else:\n                        return False\n                    \n                    \n        return True\n                    \n                    \n        ","compare_result":"101110111001000111110110111010001111001000001101100010010100101000011111101011100111100001110010011011010000000000100100100100001100000000100100001000000101000000010000010110111000100001100000000110101011110000001010010100000101011000101011110000111010000000100000000000100000111010000010011000001111010001110010000010001000000001000010000001010010000110000101001100001000010010110101000000000000000011000100100000101011100101000000000100011000000000010000000100101010001110101000000010000000100100000000001","title_slug":"valid-sudoku","has_notes":false,"flag_type":1}