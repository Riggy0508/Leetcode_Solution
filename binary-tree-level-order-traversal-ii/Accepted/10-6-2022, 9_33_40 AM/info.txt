{"id":816612578,"question_id":107,"lang":"python3","lang_name":"Python3","time":"2 years, 5 months","timestamp":1665074020,"status":10,"status_display":"Accepted","runtime":"97 ms","url":"/submissions/detail/816612578/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"14.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrderBottom(self, root: Optional[TreeNode]) -> List[List[int]]:\n        res=[]\n        \n        q=collections.deque()\n        q.append(root)\n        \n        while q:\n            qLen=len(q)\n            level=[]\n            \n            for i in range(qLen):\n                node=q.popleft()\n                if node:\n                    level.append(node.val)\n                    q.append(node.left)\n                    q.append(node.right)\n            if level:\n                \n                res.append(level)\n        return res[::-1]\n    ","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii","has_notes":false,"flag_type":1}