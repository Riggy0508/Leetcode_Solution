{"id":754659276,"lang":"python3","time":"2Â months","timestamp":1658592980,"status_display":"Accepted","runtime":"859 ms","url":"/submissions/detail/754659276/","is_pending":"Not Pending","title":"Bus Routes","memory":"50.3 MB","code":"class Solution:\n    def numBusesToDestination(self, routes: List[List[int]], source: int, target: int) -> int:\n        if source==target:\n            return 0\n        \n        graph=defaultdict(set)\n        for route_id,stops in enumerate(routes):\n            for stop in stops:\n                graph[stop].add(route_id)\n        \n        queue=deque([(source,0)])\n        seen_routes=set()\n        seen_stops=set([source])\n        \n        while queue:\n            stop, num_changes = queue.popleft()\n            if stop==target:\n                return num_changes\n            \n            for route_id in graph[stop]:\n                if route_id not in seen_routes:\n                    seen_routes.add(route_id)\n                    for stop in routes[route_id]:\n                        if stop not in seen_stops:\n                            seen_stops.add(stop)\n                            queue.append((stop,num_changes+1))\n        return -1\n                    ","compare_result":"111111111111111111111111111111111111111111111","title_slug":"bus-routes"}