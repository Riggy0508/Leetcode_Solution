{"id":781729704,"lang":"python3","time":"1Â month","timestamp":1661306954,"status_display":"Accepted","runtime":"355 ms","url":"/submissions/detail/781729704/","is_pending":"Not Pending","title":"Edit Distance","memory":"17.6 MB","code":"class Solution:\n    def minDistance(self, word1, word2):\n        \"\"\"\n        :type word1: str\n        :type word2: str\n        :rtype: int\n        \"\"\"\n        n = len(word1)\n        m = len(word2)\n        \n        # if one of the strings is empty\n        if n * m == 0:\n            return n + m\n        \n        # array to store the convertion history\n        d = [ [0] * (m + 1) for _ in range(n + 1)]\n        \n        # init boundaries\n        for i in range(n + 1):\n            d[i][0] = i\n        for j in range(m + 1):\n            d[0][j] = j\n        \n        # DP compute \n        for i in range(1, n + 1):\n            for j in range(1, m + 1):\n                left = d[i - 1][j] + 1\n                down = d[i][j - 1] + 1\n                left_down = d[i - 1][j - 1] \n                if word1[i - 1] != word2[j - 1]:\n                    left_down += 1\n                d[i][j] = min(left, down, left_down)\n        \n        return d[n][m]","compare_resulttitle_slug":"edit-distance"}