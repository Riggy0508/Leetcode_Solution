{"id":1541138799,"question_id":758,"lang":"python3","lang_name":"Python3","time":"3 weeks, 4 days","timestamp":1739412356,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/1541138799/","is_pending":"Not Pending","title":"Convert Binary Search Tree to Sorted Doubly Linked List","memory":"18.2 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n\"\"\"\n\nclass Solution:\n    def treeToDoublyList(self, root: 'Optional[Node]') -> 'Optional[Node]':\n        if not root:\n            return None\n\n        def inorder(node):\n            nonlocal first,last\n            if node:\n                inorder(node.left)\n\n                if last:\n                    last.right=node\n                    node.left=last\n                else:\n                    first=node\n                last=node\n                inorder(node.right)\n\n        \n        first,last=None,None\n        inorder(root)\n\n        first.left=last\n        last.right=first\n\n        return first\n","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"convert-binary-search-tree-to-sorted-doubly-linked-list","has_notes":false,"flag_type":1}